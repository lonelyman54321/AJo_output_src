/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  android.app.Application
 *  android.content.Context
 *  android.content.SharedPreferences
 */
package com.affise.attribution.parameters.base;

import android.app.Application;
import android.content.Context;
import android.content.SharedPreferences;
import com.affise.attribution.build.BuildConfigPropertiesProvider;
import com.affise.attribution.converter.Converter;
import com.affise.attribution.deeplink.DeeplinkClickRepository;
import com.affise.attribution.init.InitPropertiesStorage;
import com.affise.attribution.logs.LogsManager;
import com.affise.attribution.parameters.ProviderType;
import com.affise.attribution.parameters.base.PropertiesProviderFactory$create$1;
import com.affise.attribution.parameters.base.Provider;
import com.affise.attribution.parameters.factory.PostBackModelFactory;
import com.affise.attribution.parameters.providers.AffAppTokenPropertyProvider;
import com.affise.attribution.parameters.providers.AffPartParamNamePropertyProvider;
import com.affise.attribution.parameters.providers.AffPartParamNameTokenPropertyProvider;
import com.affise.attribution.parameters.providers.AffSDKVersionProvider;
import com.affise.attribution.parameters.providers.AffiseAltDeviceIdProvider;
import com.affise.attribution.parameters.providers.AffiseAppIdProvider;
import com.affise.attribution.parameters.providers.AffiseDeviceIdProvider;
import com.affise.attribution.parameters.providers.AffisePackageAppNameProvider;
import com.affise.attribution.parameters.providers.AffiseSessionCountProvider;
import com.affise.attribution.parameters.providers.ApiLevelOSProvider;
import com.affise.attribution.parameters.providers.AppVersionProvider;
import com.affise.attribution.parameters.providers.AppVersionRawProvider;
import com.affise.attribution.parameters.providers.BuildProvider;
import com.affise.attribution.parameters.providers.CountryProvider;
import com.affise.attribution.parameters.providers.CpuTypeProvider;
import com.affise.attribution.parameters.providers.CreatedTimeHourProvider;
import com.affise.attribution.parameters.providers.CreatedTimeMilliProvider;
import com.affise.attribution.parameters.providers.CreatedTimeProvider;
import com.affise.attribution.parameters.providers.CustomLongProvider;
import com.affise.attribution.parameters.providers.DeeplinkClickPropertyProvider;
import com.affise.attribution.parameters.providers.DeeplinkProvider;
import com.affise.attribution.parameters.providers.DeviceManufacturerProvider;
import com.affise.attribution.parameters.providers.DeviceNameProvider;
import com.affise.attribution.parameters.providers.DeviceProvider;
import com.affise.attribution.parameters.providers.DeviceTypeProvider;
import com.affise.attribution.parameters.providers.EmptyStringProvider;
import com.affise.attribution.parameters.providers.FirstOpenHourProvider;
import com.affise.attribution.parameters.providers.FirstOpenTimeProvider;
import com.affise.attribution.parameters.providers.HardwareNameProvider;
import com.affise.attribution.parameters.providers.InstallBeginTimeProvider;
import com.affise.attribution.parameters.providers.InstallFinishTimeProvider;
import com.affise.attribution.parameters.providers.InstallFirstEventProvider;
import com.affise.attribution.parameters.providers.InstallReferrerProvider;
import com.affise.attribution.parameters.providers.InstalledHourProvider;
import com.affise.attribution.parameters.providers.InstalledTimeProvider;
import com.affise.attribution.parameters.providers.IsEmulatorProvider;
import com.affise.attribution.parameters.providers.IsProductionPropertyProvider;
import com.affise.attribution.parameters.providers.IsRootedProvider;
import com.affise.attribution.parameters.providers.LanguageProvider;
import com.affise.attribution.parameters.providers.LastSessionTimeProvider;
import com.affise.attribution.parameters.providers.LifetimeSessionCountProvider;
import com.affise.attribution.parameters.providers.MCCProvider;
import com.affise.attribution.parameters.providers.MNCProvider;
import com.affise.attribution.parameters.providers.OSVersionProvider;
import com.affise.attribution.parameters.providers.OsAndVersionProvider;
import com.affise.attribution.parameters.providers.OsNameProvider;
import com.affise.attribution.parameters.providers.PlatformNameProvider;
import com.affise.attribution.parameters.providers.PushTokenProvider;
import com.affise.attribution.parameters.providers.RandomUserIdProvider;
import com.affise.attribution.parameters.providers.RefTokenProvider;
import com.affise.attribution.parameters.providers.RefTokensProvider;
import com.affise.attribution.parameters.providers.ReferralTimeProvider;
import com.affise.attribution.parameters.providers.ReferrerClickTimestampProvider;
import com.affise.attribution.parameters.providers.ReferrerClickTimestampServerProvider;
import com.affise.attribution.parameters.providers.ReferrerGooglePlayInstantProvider;
import com.affise.attribution.parameters.providers.ReferrerInstallVersionProvider;
import com.affise.attribution.parameters.providers.RegionProvider;
import com.affise.attribution.parameters.providers.SdkPlatformNameProvider;
import com.affise.attribution.parameters.providers.StoreProvider;
import com.affise.attribution.parameters.providers.TimeSessionProvider;
import com.affise.attribution.parameters.providers.TimezoneDeviceProvider;
import com.affise.attribution.parameters.providers.UserAgentProvider;
import com.affise.attribution.parameters.providers.UuidProvider;
import com.affise.attribution.session.SessionManager;
import com.affise.attribution.usecase.DeviceUseCase;
import com.affise.attribution.usecase.FirstAppOpenUseCase;
import com.affise.attribution.usecase.RemarketingUseCase;
import com.affise.attribution.usecase.StoreInstallReferrerUseCase;
import com.affise.attribution.usecase.StoreUseCase;
import java.util.List;
import kotlin.jvm.functions.Function0;
import kotlin.jvm.internal.Intrinsics;

public final class PropertiesProviderFactory {
    private final Application app;
    private final BuildConfigPropertiesProvider buildConfigPropertiesProvider;
    private final DeeplinkClickRepository deeplinkClickRepository;
    private final DeviceUseCase deviceUseCase;
    private final FirstAppOpenUseCase firstAppOpenUseCase;
    private final InitPropertiesStorage initPropertiesStorage;
    private final LogsManager logsManager;
    private final RemarketingUseCase remarketingUseCase;
    private final SessionManager sessionManager;
    private final SharedPreferences sharedPreferences;
    private final StoreInstallReferrerUseCase storeInstallReferrerUseCase;
    private final StoreUseCase storeUseCase;
    private final Converter stringToMd5Converter;
    private final Converter stringToSha256Converter;

    public PropertiesProviderFactory(BuildConfigPropertiesProvider buildConfigPropertiesProvider2, Application application, FirstAppOpenUseCase firstAppOpenUseCase2, StoreInstallReferrerUseCase storeInstallReferrerUseCase2, SessionManager sessionManager2, SharedPreferences sharedPreferences2, InitPropertiesStorage initPropertiesStorage, Converter converter, Converter converter2, LogsManager logsManager2, DeeplinkClickRepository deeplinkClickRepository, DeviceUseCase deviceUseCase2, RemarketingUseCase remarketingUseCase2, StoreUseCase storeUseCase2) {
        Intrinsics.checkNotNullParameter(buildConfigPropertiesProvider2, "buildConfigPropertiesProvider");
        Intrinsics.checkNotNullParameter(application, "app");
        Intrinsics.checkNotNullParameter(firstAppOpenUseCase2, "firstAppOpenUseCase");
        Intrinsics.checkNotNullParameter(storeInstallReferrerUseCase2, "storeInstallReferrerUseCase");
        Intrinsics.checkNotNullParameter(sessionManager2, "sessionManager");
        Intrinsics.checkNotNullParameter(sharedPreferences2, "sharedPreferences");
        Intrinsics.checkNotNullParameter(initPropertiesStorage, "initPropertiesStorage");
        Intrinsics.checkNotNullParameter(converter, "stringToMd5Converter");
        Intrinsics.checkNotNullParameter(converter2, "stringToSha256Converter");
        Intrinsics.checkNotNullParameter(logsManager2, "logsManager");
        Intrinsics.checkNotNullParameter(deeplinkClickRepository, "deeplinkClickRepository");
        Intrinsics.checkNotNullParameter(deviceUseCase2, "deviceUseCase");
        Intrinsics.checkNotNullParameter(remarketingUseCase2, "remarketingUseCase");
        Intrinsics.checkNotNullParameter(storeUseCase2, "storeUseCase");
        this.buildConfigPropertiesProvider = buildConfigPropertiesProvider2;
        this.app = application;
        this.firstAppOpenUseCase = firstAppOpenUseCase2;
        this.storeInstallReferrerUseCase = storeInstallReferrerUseCase2;
        this.sessionManager = sessionManager2;
        this.sharedPreferences = sharedPreferences2;
        this.initPropertiesStorage = initPropertiesStorage;
        this.stringToMd5Converter = converter;
        this.stringToSha256Converter = converter2;
        this.logsManager = logsManager2;
        this.deeplinkClickRepository = deeplinkClickRepository;
        this.deviceUseCase = deviceUseCase2;
        this.remarketingUseCase = remarketingUseCase2;
        this.storeUseCase = storeUseCase2;
    }

    public final PostBackModelFactory create() {
        Object object = this.firstAppOpenUseCase;
        Object object2 = new FirstOpenTimeProvider((FirstAppOpenUseCase)object);
        Object[] objectArray = this.sessionManager;
        object = new LastSessionTimeProvider((SessionManager)objectArray);
        UuidProvider uuidProvider = new UuidProvider();
        Object object3 = this.initPropertiesStorage;
        AffiseAppIdProvider affiseAppIdProvider = new AffiseAppIdProvider((InitPropertiesStorage)object3);
        Object object4 = this.app;
        object3 = new AffisePackageAppNameProvider((Context)object4);
        Object object5 = this.app;
        Object object6 = this.logsManager;
        object4 = new AppVersionProvider((Context)object5, (LogsManager)object6);
        object6 = this.app;
        Object object7 = this.logsManager;
        object5 = new AppVersionRawProvider((Context)object6, (LogsManager)object7);
        object7 = this.storeUseCase;
        object6 = new StoreProvider((StoreUseCase)object7);
        Object object8 = this.app;
        Object object9 = this.logsManager;
        object7 = new InstalledTimeProvider((Context)object8, (LogsManager)object9);
        object9 = this.app;
        object8 = new InstalledHourProvider((Context)object9);
        Object object10 = this.firstAppOpenUseCase;
        object9 = new FirstOpenHourProvider((FirstAppOpenUseCase)object10);
        Object object11 = this.firstAppOpenUseCase;
        object10 = new InstallFirstEventProvider((FirstAppOpenUseCase)object11);
        Object object12 = this.storeInstallReferrerUseCase;
        object11 = new InstallBeginTimeProvider((StoreInstallReferrerUseCase)object12);
        Object[] objectArray2 = objectArray;
        objectArray = this.firstAppOpenUseCase;
        Object object13 = object12 = new InstallFinishTimeProvider((FirstAppOpenUseCase)objectArray);
        object12 = this.storeInstallReferrerUseCase;
        objectArray = new ReferrerInstallVersionProvider((StoreInstallReferrerUseCase)object12);
        Object[] objectArray3 = objectArray;
        objectArray = this.storeInstallReferrerUseCase;
        Object object14 = object12 = new ReferralTimeProvider((StoreInstallReferrerUseCase)objectArray);
        object12 = this.storeInstallReferrerUseCase;
        objectArray = new ReferrerClickTimestampProvider((StoreInstallReferrerUseCase)object12);
        Object[] objectArray4 = objectArray;
        objectArray = this.storeInstallReferrerUseCase;
        Object object15 = object12 = new ReferrerClickTimestampServerProvider((StoreInstallReferrerUseCase)objectArray);
        object12 = this.storeInstallReferrerUseCase;
        objectArray = new ReferrerGooglePlayInstantProvider((StoreInstallReferrerUseCase)object12);
        object12 = new CreatedTimeProvider();
        CreatedTimeMilliProvider createdTimeMilliProvider = new CreatedTimeMilliProvider();
        CreatedTimeHourProvider createdTimeHourProvider = new CreatedTimeHourProvider();
        Object object16 = object12;
        Object[] objectArray5 = objectArray;
        objectArray = ProviderType.LAST_TIME_SESSION;
        Object object17 = object11;
        object11 = new PropertiesProviderFactory$create$1((LastSessionTimeProvider)object, (FirstOpenTimeProvider)object2);
        Object object18 = object;
        object12 = new CustomLongProvider((ProviderType)objectArray, 54.0f, (Function0)object11);
        objectArray = this.buildConfigPropertiesProvider;
        object = new CpuTypeProvider((BuildConfigPropertiesProvider)objectArray);
        object11 = this.buildConfigPropertiesProvider;
        objectArray = new HardwareNameProvider((BuildConfigPropertiesProvider)object11);
        Object[] objectArray6 = objectArray;
        objectArray = this.buildConfigPropertiesProvider;
        Object object19 = object11 = new DeviceManufacturerProvider((BuildConfigPropertiesProvider)objectArray);
        object11 = this.deeplinkClickRepository;
        objectArray = new DeeplinkClickPropertyProvider((DeeplinkClickRepository)object11);
        Object[] objectArray7 = objectArray;
        objectArray = ProviderType.DEVICE_ATLAS_ID;
        Object object20 = object;
        object11 = new EmptyStringProvider((ProviderType)objectArray, 26.0f);
        objectArray = this.firstAppOpenUseCase;
        Object object21 = object = new AffiseDeviceIdProvider((FirstAppOpenUseCase)objectArray);
        object = this.firstAppOpenUseCase;
        objectArray = new AffiseAltDeviceIdProvider((FirstAppOpenUseCase)object);
        Object[] objectArray8 = objectArray;
        objectArray = this.sharedPreferences;
        Object object22 = object = new RefTokenProvider((SharedPreferences)objectArray);
        object = this.sharedPreferences;
        objectArray = new RefTokensProvider((SharedPreferences)object);
        Object[] objectArray9 = objectArray;
        objectArray = this.app;
        Object object23 = object11;
        object11 = this.storeInstallReferrerUseCase;
        object = new InstallReferrerProvider((Application)objectArray, (StoreInstallReferrerUseCase)object11);
        objectArray = new UserAgentProvider();
        Object[] objectArray10 = objectArray;
        objectArray = this.app;
        Object object24 = object11 = new MCCProvider((Application)objectArray);
        object11 = this.app;
        objectArray = new MNCProvider((Application)object11);
        object11 = new RegionProvider();
        CountryProvider countryProvider = new CountryProvider();
        Object object25 = object11;
        Object[] objectArray11 = objectArray;
        objectArray = this.remarketingUseCase;
        Object object26 = object11 = new LanguageProvider((RemarketingUseCase)objectArray);
        object11 = this.app;
        objectArray = new DeviceNameProvider((Application)object11);
        Object[] objectArray12 = objectArray;
        objectArray = this.app;
        Object object27 = object11 = new DeviceTypeProvider((Application)objectArray);
        object11 = this.buildConfigPropertiesProvider;
        objectArray = new OsNameProvider((BuildConfigPropertiesProvider)object11);
        object11 = new PlatformNameProvider();
        SdkPlatformNameProvider sdkPlatformNameProvider = new SdkPlatformNameProvider();
        Object object28 = object11;
        Object[] objectArray13 = objectArray;
        objectArray = this.buildConfigPropertiesProvider;
        object11 = new ApiLevelOSProvider((BuildConfigPropertiesProvider)objectArray);
        objectArray = new AffSDKVersionProvider();
        Object[] objectArray14 = objectArray;
        Object object29 = object11;
        object11 = this.buildConfigPropertiesProvider;
        objectArray = new OSVersionProvider((BuildConfigPropertiesProvider)object11);
        Object[] objectArray15 = objectArray;
        objectArray = this.firstAppOpenUseCase;
        Object object30 = object11 = new RandomUserIdProvider((FirstAppOpenUseCase)objectArray);
        object11 = this.deviceUseCase;
        objectArray = new IsEmulatorProvider((DeviceUseCase)object11);
        Object[] objectArray16 = objectArray;
        objectArray = this.initPropertiesStorage;
        Object object31 = object11 = new IsProductionPropertyProvider((InitPropertiesStorage)objectArray);
        object11 = this.deviceUseCase;
        objectArray = new IsRootedProvider((DeviceUseCase)object11);
        Object object32 = object11 = new TimezoneDeviceProvider();
        Object[] objectArray17 = objectArray;
        objectArray = ProviderType.AFFISE_EVENT_TOKEN;
        Object object33 = object;
        object11 = new EmptyStringProvider((ProviderType)objectArray, 52.0f);
        objectArray = ProviderType.AFFISE_EVENT_NAME;
        Object object34 = object11;
        object = new EmptyStringProvider((ProviderType)objectArray, 53.0f);
        object11 = this.sessionManager;
        objectArray = new TimeSessionProvider((SessionManager)object11);
        Object[] objectArray18 = objectArray;
        objectArray = this.sessionManager;
        Object object35 = object11 = new AffiseSessionCountProvider((SessionManager)objectArray);
        object11 = this.sessionManager;
        objectArray = new LifetimeSessionCountProvider((SessionManager)object11);
        Object[] objectArray19 = objectArray;
        objectArray = this.deeplinkClickRepository;
        Object object36 = object11 = new DeeplinkProvider((DeeplinkClickRepository)objectArray);
        object11 = this.initPropertiesStorage;
        objectArray = new AffPartParamNamePropertyProvider((InitPropertiesStorage)object11);
        Object[] objectArray20 = objectArray;
        objectArray = this.initPropertiesStorage;
        Object object37 = object11 = new AffPartParamNameTokenPropertyProvider((InitPropertiesStorage)objectArray);
        object11 = this.initPropertiesStorage;
        Object object38 = object;
        object = this.stringToSha256Converter;
        objectArray = new AffAppTokenPropertyProvider((InitPropertiesStorage)object11, (Converter)object);
        object11 = ProviderType.LABEL;
        Object[] objectArray21 = objectArray;
        object = new EmptyStringProvider((ProviderType)((Object)object11), 62.0f);
        object11 = this.sharedPreferences;
        objectArray = new PushTokenProvider((SharedPreferences)object11);
        Object[] objectArray22 = objectArray;
        objectArray = this.remarketingUseCase;
        Object object39 = object11 = new OsAndVersionProvider((RemarketingUseCase)objectArray);
        object11 = this.remarketingUseCase;
        objectArray = new DeviceProvider((RemarketingUseCase)object11);
        Object[] objectArray23 = objectArray;
        objectArray = this.remarketingUseCase;
        object11 = new BuildProvider((RemarketingUseCase)objectArray);
        objectArray = new Provider[]{uuidProvider, affiseAppIdProvider, object3, object4, object5, object6, object7, object2, object8, object9, object10, object17, object13, objectArray3, object14, objectArray4, object15, objectArray5, object16, createdTimeMilliProvider, createdTimeHourProvider, object12, object20, objectArray6, object19, objectArray7, object23, object21, objectArray8, object22, objectArray9, object33, objectArray10, object24, objectArray11, object25, countryProvider, object26, objectArray12, object27, objectArray13, object28, sdkPlatformNameProvider, object29, objectArray14, objectArray15, object30, objectArray16, object31, objectArray17, object32, object34, object38, object18, objectArray18, object35, objectArray19, object36, objectArray20, object37, objectArray21, object, objectArray22, object39, objectArray23, object11};
        object2 = xx_2.i(objectArray);
        object = objectArray2;
        objectArray2((List)object2);
        return objectArray2;
    }
}

