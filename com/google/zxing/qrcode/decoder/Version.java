/*
 * Decompiled with CFR 0.152.
 */
package com.google.zxing.qrcode.decoder;

import com.google.zxing.FormatException;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;
import com.google.zxing.qrcode.decoder.FormatInformation;
import com.google.zxing.qrcode.decoder.Version$ECB;
import com.google.zxing.qrcode.decoder.Version$ECBlocks;

public final class Version {
    private static final Version[] VERSIONS;
    private static final int[] VERSION_DECODE_INFO;
    private final int[] alignmentPatternCenters;
    private final Version$ECBlocks[] ecBlocks;
    private final int totalCodewords;
    private final int versionNumber;

    static {
        int[] nArray;
        int[] nArray2 = nArray = new int[34];
        int[] nArray3 = nArray;
        nArray2[0] = 31892;
        nArray3[1] = 34236;
        nArray2[2] = 39577;
        nArray3[3] = 42195;
        nArray2[4] = 48118;
        nArray3[5] = 51042;
        nArray2[6] = 55367;
        nArray3[7] = 58893;
        nArray2[8] = 63784;
        nArray3[9] = 68472;
        nArray2[10] = 70749;
        nArray3[11] = 76311;
        nArray2[12] = 79154;
        nArray3[13] = 84390;
        nArray2[14] = 87683;
        nArray3[15] = 92361;
        nArray2[16] = 96236;
        nArray3[17] = 102084;
        nArray2[18] = 102881;
        nArray3[19] = 110507;
        nArray2[20] = 110734;
        nArray3[21] = 117786;
        nArray2[22] = 119615;
        nArray3[23] = 126325;
        nArray2[24] = 127568;
        nArray3[25] = 133589;
        nArray2[26] = 136944;
        nArray3[27] = 141498;
        nArray2[28] = 145311;
        nArray3[29] = 150283;
        nArray2[30] = 152622;
        nArray3[31] = 158308;
        nArray2[32] = 161089;
        nArray3[33] = 167017;
        VERSION_DECODE_INFO = nArray;
        VERSIONS = Version.buildVersions();
    }

    private Version(int n3, int[] object, Version$ECBlocks ... objectArray) {
        this.versionNumber = n3;
        this.alignmentPatternCenters = object;
        this.ecBlocks = objectArray;
        object = objectArray[0];
        int n4 = ((Version$ECBlocks)object).getECCodewordsPerBlock();
        objectArray = objectArray[0].getECBlocks();
        int n7 = objectArray.length;
        int n8 = 0;
        for (n3 = 0; n3 < n7; ++n3) {
            Object object2 = objectArray[n3];
            int n10 = ((Version$ECB)object2).getCount();
            int n14 = (((Version$ECB)object2).getDataCodewords() + n4) * n10;
            n8 += n14;
        }
        this.totalCodewords = n8;
    }

    private static Version[] buildVersions() {
        Object object = new int[]{};
        int n3 = 1;
        Object object2 = new Version$ECB(n3, 19);
        Object object3 = new Version$ECB[n3];
        object3[0] = object2;
        Object object4 = new Version$ECBlocks(7, (Version$ECB)object3);
        int n4 = 16;
        Object object5 = new Version$ECB(n3, n4);
        Object object6 = new Version$ECB[n3];
        object6[0] = object5;
        int n7 = 10;
        object3 = new Version$ECBlocks(n7, (Version$ECB)object6);
        int n8 = 13;
        Object object7 = new Version$ECB(n3, n8);
        Object object8 = new Version$ECB[n3];
        object8[0] = object7;
        object6 = new Version$ECBlocks(n8, (Version$ECB)object8);
        object8 = new Version$ECB(n3, 9);
        Object object9 = new Version$ECB[n3];
        object9[0] = object8;
        object7 = new Version$ECBlocks(17, (Version$ECB[])object9);
        int n10 = 4;
        Object object10 = new Version$ECBlocks[n10];
        object10[0] = object4;
        object10[n3] = object3;
        int n14 = 2;
        object10[n14] = object6;
        int n15 = 3;
        object10[n15] = object7;
        Version version = new Version(n3, (int[])object, (Version$ECBlocks)object10);
        object = new Version;
        object10 = new int[]{6, 18};
        Object object11 = new Version$ECB(n3, 34);
        Object object12 = new Version$ECB[n3];
        object12[0] = object11;
        object2 = new Version$ECBlocks(n7, (Version$ECB)object12);
        n7 = 28;
        object12 = new Version$ECB(n3, n7);
        object6 = new Version$ECB[n3];
        object6[0] = object12;
        object11 = new Version$ECBlocks(n4, (Version$ECB)object6);
        int n16 = 22;
        object12 = new Version$ECB(n3, n16);
        object7 = new Version$ECB[n3];
        object7[0] = object12;
        object6 = new Version$ECBlocks(n16, (Version$ECB)object7);
        object12 = new Version$ECB(n3, n4);
        Object object13 = new Version$ECB[n3];
        object13[0] = object12;
        object7 = new Version$ECBlocks(n7, (Version$ECB[])object13);
        object13 = new Version$ECBlocks[n10];
        object13[0] = object2;
        object13[n3] = object11;
        object13[n14] = object6;
        object13[n15] = object7;
        object(n14, (int[])object10, (Version$ECBlocks[])object13);
        object13 = new int[]{6, n16};
        object6 = new Version$ECB(n3, 55);
        object7 = new Version$ECB[n3];
        object7[0] = object6;
        object11 = new Version$ECBlocks(15, (Version$ECB)object7);
        object12 = new Version$ECB(n3, 44);
        object10 = new Version$ECB[n3];
        object10[0] = object12;
        object7 = new Version$ECBlocks(26, (Version$ECB[])object10);
        object5 = new Version$ECB(n14, 17);
        object6 = new Version$ECB[n3];
        object6[0] = object5;
        object10 = new Version$ECBlocks(18, (Version$ECB)object6);
        object6 = new Version$ECB(n14, 13);
        object12 = new Version$ECB[n3];
        object12[0] = object6;
        object5 = new Version$ECBlocks(n16, (Version$ECB)object12);
        object6 = new Version$ECBlocks[n10];
        object6[0] = object11;
        object6[n3] = object7;
        object6[n14] = object10;
        object6[n15] = object5;
        object2 = new Version(n15, (int[])object13, (Version$ECBlocks[])object6);
        object6 = new int[]{6, 26};
        object13 = new Version$ECB(n3, 80);
        object7 = new Version$ECB[n3];
        object7[0] = object13;
        object5 = new Version$ECBlocks(20, (Version$ECB)object7);
        object12 = new Version$ECB(n14, 32);
        object10 = new Version$ECB[n3];
        object10[0] = object12;
        object7 = new Version$ECBlocks(18, (Version$ECB[])object10);
        object10 = new Version$ECB(n14, 24);
        object8 = new Version$ECB[n3];
        object8[0] = object10;
        object12 = new Version$ECBlocks(26, (Version$ECB)object8);
        object10 = new Version$ECB(n10, 9);
        object13 = new Version$ECB[n3];
        object13[0] = object10;
        object8 = new Version$ECBlocks(16, (Version$ECB[])object13);
        object13 = new Version$ECBlocks[n10];
        object13[0] = object5;
        object13[n3] = object7;
        object13[n14] = object12;
        object13[n15] = object8;
        object11 = new Version(n10, (int[])object6, (Version$ECBlocks[])object13);
        object7 = new int[]{6, 30};
        object12 = new Version$ECB(n3, 108);
        object8 = new Version$ECB[n3];
        object8[0] = object12;
        object6 = new Version$ECBlocks(26, (Version$ECB)object8);
        object8 = new Version$ECB(n14, 43);
        object10 = new Version$ECB[n3];
        object10[0] = object8;
        object12 = new Version$ECBlocks(24, (Version$ECB[])object10);
        object10 = new Version$ECB(n14, 15);
        object13 = new Version$ECB(n14, 16);
        object3 = new Version$ECB[n14];
        object3[0] = object10;
        object3[n3] = object13;
        object8 = new Version$ECBlocks(18, (Version$ECB)object3);
        object13 = new Version$ECB(n14, 11);
        object10 = new Version$ECB(n14, 12);
        object9 = new Version$ECB[n14];
        object9[0] = object13;
        object9[n3] = object10;
        object3 = new Version$ECBlocks(22, (Version$ECB[])object9);
        object9 = new Version$ECBlocks[4];
        object9[0] = object6;
        object9[n3] = object12;
        object9[n14] = object8;
        object9[3] = object3;
        object5 = new Version(5, (int[])object7, (Version$ECBlocks[])object9);
        object12 = new int[]{6, 34};
        object7 = new Version$ECB(n14, 68);
        object8 = new Version$ECB[n3];
        object8[0] = object7;
        object6 = new Version$ECBlocks(18, (Version$ECB)object8);
        int n17 = 4;
        object8 = new Version$ECB(n17, 27);
        object9 = new Version$ECB[n3];
        object9[0] = object8;
        object7 = new Version$ECBlocks(16, (Version$ECB[])object9);
        object9 = new Version$ECB(n17, 19);
        object3 = new Version$ECB[n3];
        object3[0] = object9;
        object8 = new Version$ECBlocks(24, (Version$ECB)object3);
        object9 = new Version$ECB(n17, 15);
        object4 = new Version$ECB[n3];
        object4[0] = object9;
        object3 = new Version$ECBlocks(28, (Version$ECB[])object4);
        object4 = new Version$ECBlocks[n17];
        object4[0] = object6;
        object4[n3] = object7;
        int n18 = 2;
        object4[n18] = object8;
        object4[3] = object3;
        n15 = 6;
        object13 = new Version(n15, (int[])object12, (Version$ECBlocks[])object4);
        object7 = new int[]{n15, 22, 38};
        object12 = new Version$ECB(n18, 78);
        object6 = new Version$ECB[n3];
        object6[0] = object12;
        object3 = new Version$ECBlocks(20, (Version$ECB)object6);
        n10 = 4;
        object12 = new Version$ECB(n10, 31);
        object8 = new Version$ECB[n3];
        object8[0] = object12;
        object6 = new Version$ECBlocks(18, (Version$ECB)object8);
        n3 = 2;
        object10 = new Version$ECB(n3, 14);
        object12 = new Version$ECB(n10, 15);
        Object object14 = new Version$ECB[n3];
        object14[0] = object10;
        n17 = 1;
        object14[n17] = object12;
        object8 = new Version$ECBlocks(18, (Version$ECB)object14);
        object12 = new Version$ECB(n10, 13);
        Object object15 = new Version$ECB(n17, 14);
        Object object16 = object13;
        n10 = 2;
        object13 = new Version$ECB[n10];
        object13[0] = object12;
        object13[n17] = object15;
        object14 = new Version$ECBlocks(26, (Version$ECB[])object13);
        object13 = new Version$ECBlocks[4];
        object13[0] = object3;
        object13[n17] = object6;
        object13[n10] = object8;
        object13[3] = object14;
        object4 = new Version(7, (int[])object7, (Version$ECBlocks[])object13);
        n4 = 24;
        object15 = new int[]{6, n4, 42};
        object6 = new Version$ECB(n10, 97);
        object7 = new Version$ECB[n17];
        object7[0] = object6;
        object3 = new Version$ECBlocks(n4, (Version$ECB)object7);
        object6 = new Version$ECB(n10, 38);
        object7 = new Version$ECB(n10, 39);
        object8 = new Version$ECB[n10];
        object8[0] = object6;
        object8[1] = object7;
        object13 = new Version$ECBlocks(22, (Version$ECB)object8);
        object10 = new Version$ECB(4, 18);
        object7 = new Version$ECB(n10, 19);
        object6 = new Version$ECB[n10];
        object6[0] = object10;
        object6[1] = object7;
        object8 = new Version$ECBlocks(22, (Version$ECB)object6);
        object7 = new Version$ECB(4, 14);
        object10 = new Version$ECB(n10, 15);
        object12 = new Version$ECB[n10];
        object12[0] = object7;
        int n19 = 1;
        object12[n19] = object10;
        object6 = new Version$ECBlocks(26, (Version$ECB)object12);
        object10 = new Version$ECBlocks[4];
        object10[0] = object3;
        object10[n19] = object13;
        object10[n10] = object8;
        object10[3] = object6;
        object14 = new Version(8, (int[])object15, (Version$ECBlocks)object10);
        object12 = new int[]{6, 26, 46};
        object7 = new Version$ECB(n10, 116);
        object8 = new Version$ECB[]{object7};
        object6 = new Version$ECBlocks(30, (Version$ECB)object8);
        object8 = new Version$ECB(3, 36);
        object3 = new Version$ECB(n10, 37);
        object13 = new Version$ECB[n10];
        object13[0] = object8;
        object13[1] = object3;
        object7 = new Version$ECBlocks(22, (Version$ECB[])object13);
        n17 = 4;
        object13 = new Version$ECB(n17, 16);
        Version$ECB[] version$ECBArray = object14;
        object8 = new Version$ECB(n17, 17);
        object14 = new Version$ECB[n10];
        object14[0] = object13;
        object14[1] = object8;
        object3 = new Version$ECBlocks(20, (Version$ECB)object14);
        object8 = new Version$ECB(n17, 12);
        Object object17 = object4;
        object13 = new Version$ECB(n17, 13);
        object4 = new Version$ECB[n10];
        object4[0] = object8;
        n16 = 1;
        object4[n16] = object13;
        object14 = new Version$ECBlocks(24, (Version$ECB[])object4);
        object4 = new Version$ECBlocks[n17];
        object4[0] = object6;
        object4[n16] = object7;
        object4[n10] = object3;
        object4[3] = object14;
        object15 = new Version(9, (int[])object12, (Version$ECBlocks[])object4);
        object6 = new int[]{6, 28, 50};
        object13 = new Version$ECB(n10, 68);
        object7 = new Version$ECB(n10, 69);
        object12 = new Version$ECB[n10];
        object12[0] = object13;
        n4 = 1;
        object12[n4] = object7;
        object3 = new Version$ECBlocks(18, (Version$ECB)object12);
        object12 = new Version$ECB(4, 43);
        object4 = new Version$ECB(n4, 44);
        object10 = new Version$ECB[n10];
        object10[0] = object12;
        object10[n4] = object4;
        object7 = new Version$ECBlocks(26, (Version$ECB[])object10);
        object12 = new Version$ECB(6, 19);
        object10 = new Version$ECB(n10, 20);
        object13 = new Version$ECB[n10];
        object13[0] = object12;
        object13[1] = object10;
        object4 = new Version$ECBlocks(24, (Version$ECB[])object13);
        object10 = new Version$ECB(6, 15);
        object12 = new Version$ECB(n10, 16);
        object8 = new Version$ECB[n10];
        object8[0] = object10;
        n17 = 1;
        object8[n17] = object12;
        object13 = new Version$ECBlocks(28, (Version$ECB)object8);
        object8 = new Version$ECBlocks[4];
        object8[0] = object3;
        object8[n17] = object7;
        object8[n10] = object4;
        object8[3] = object13;
        object14 = new Version(10, (int[])object6, (Version$ECBlocks[])object8);
        object7 = new int[]{6, 30, 54};
        n16 = 4;
        object6 = new Version$ECB(n16, 81);
        object12 = new Version$ECB[n17];
        object12[0] = object6;
        object13 = new Version$ECBlocks(20, (Version$ECB)object12);
        object12 = new Version$ECB(n17, 50);
        object3 = new Version$ECB(n16, 51);
        n17 = 2;
        object8 = new Version$ECB[n17];
        object8[0] = object12;
        object8[1] = object3;
        object6 = new Version$ECBlocks(30, (Version$ECB)object8);
        n10 = 4;
        object8 = new Version$ECB(n10, 22);
        Object object18 = object14;
        object12 = new Version$ECB(n10, 23);
        object9 = new Version$ECB[n17];
        object9[0] = object8;
        object9[1] = object12;
        object3 = new Version$ECBlocks(28, (Version$ECB[])object9);
        object9 = new Version$ECB(3, 12);
        Version$ECB[] version$ECBArray2 = object15;
        object14 = new Version$ECB(8, 13);
        object15 = new Version$ECB[n17];
        object15[0] = object9;
        n16 = 1;
        object15[n16] = object14;
        object12 = new Version$ECBlocks(24, (Version$ECB[])object15);
        object15 = new Version$ECBlocks[4];
        object15[0] = object13;
        object15[n16] = object6;
        object15[n17] = object3;
        object15[3] = object12;
        object4 = new Version(11, (int[])object7, (Version$ECBlocks[])object15);
        object6 = new int[]{6, 32, 58};
        object13 = new Version$ECB(n17, 92);
        object7 = new Version$ECB(n17, 93);
        object12 = new Version$ECB[n17];
        object12[0] = object13;
        n4 = 1;
        object12[n4] = object7;
        object3 = new Version$ECBlocks(24, (Version$ECB)object12);
        object12 = new Version$ECB(6, 36);
        object15 = new Version$ECB(n17, 37);
        object9 = new Version$ECB[n17];
        object9[0] = object12;
        object9[n4] = object15;
        object7 = new Version$ECBlocks(22, (Version$ECB[])object9);
        object12 = new Version$ECB(4, 20);
        object13 = new Version$ECB(6, 21);
        object8 = new Version$ECB[n17];
        object8[0] = object12;
        object8[1] = object13;
        object15 = new Version$ECBlocks(26, (Version$ECB)object8);
        object8 = new Version$ECB(7, 14);
        Object object19 = object4;
        n14 = 4;
        object12 = new Version$ECB(n14, 15);
        object9 = new Version$ECB[n17];
        object9[0] = object8;
        n16 = 1;
        object9[n16] = object12;
        object13 = new Version$ECBlocks(28, (Version$ECB[])object9);
        object12 = new Version$ECBlocks[n14];
        object12[0] = object3;
        object12[n16] = object7;
        object12[n17] = object15;
        object12[3] = object13;
        object14 = new Version(12, (int[])object6, (Version$ECBlocks[])object12);
        object15 = new int[]{6, 34, 62};
        object13 = new Version$ECB(4, 107);
        object6 = new Version$ECB[n16];
        object6[0] = object13;
        object3 = new Version$ECBlocks(26, (Version$ECB)object6);
        object6 = new Version$ECB(8, 37);
        object12 = new Version$ECB(n16, 38);
        n17 = 2;
        object9 = new Version$ECB[n17];
        object9[0] = object6;
        object9[n16] = object12;
        object13 = new Version$ECBlocks(22, (Version$ECB[])object9);
        object12 = new Version$ECB(8, 20);
        n19 = 4;
        object8 = new Version$ECB(n19, 21);
        object9 = new Version$ECB[n17];
        object9[0] = object12;
        object9[1] = object8;
        object6 = new Version$ECBlocks(24, (Version$ECB[])object9);
        n17 = 12;
        object9 = new Version$ECB(n17, 11);
        object12 = new Version$ECB(n19, n17);
        n17 = 2;
        object7 = new Version$ECB[n17];
        object7[0] = object9;
        n10 = 1;
        object7[n10] = object12;
        object8 = new Version$ECBlocks(22, (Version$ECB)object7);
        object12 = new Version$ECBlocks[4];
        object12[0] = object3;
        object12[n10] = object13;
        object12[n17] = object6;
        n15 = 3;
        object12[n15] = object8;
        object4 = new Version(13, (int[])object15, (Version$ECBlocks[])object12);
        object13 = new int[]{6, 26, 46, 66};
        object7 = new Version$ECB(n15, 115);
        n8 = 1;
        object3 = new Version$ECB(n8, 116);
        n16 = 2;
        object9 = new Version$ECB[n16];
        object9[0] = object7;
        object9[n8] = object3;
        object6 = new Version$ECBlocks(30, (Version$ECB[])object9);
        object7 = new Version$ECB(4, 40);
        n17 = 5;
        object12 = new Version$ECB(n17, 41);
        object9 = new Version$ECB[n16];
        object9[0] = object7;
        object9[1] = object12;
        object3 = new Version$ECBlocks(24, (Version$ECB[])object9);
        object9 = new Version$ECB(11, 16);
        object7 = new Version$ECB(n17, 17);
        object10 = new Version$ECB[]{object9, object7};
        object12 = new Version$ECBlocks(20, (Version$ECB[])object10);
        object10 = new Version$ECB(11, 12);
        Object object20 = object4;
        object8 = new Version$ECB(5, 13);
        n14 = 2;
        object9 = new Version$ECB[n14];
        object9[0] = object10;
        n17 = 1;
        object9[n17] = object8;
        object7 = new Version$ECBlocks(24, (Version$ECB[])object9);
        object9 = new Version$ECBlocks[4];
        object9[0] = object6;
        object9[n17] = object3;
        object9[n14] = object12;
        object9[3] = object7;
        object15 = new Version(14, (int[])object13, (Version$ECBlocks[])object9);
        object13 = new int[]{6, 26, 48, 70};
        n16 = 5;
        object7 = new Version$ECB(n16, 87);
        n17 = 1;
        object12 = new Version$ECB(n17, 88);
        n10 = 2;
        object3 = new Version$ECB[n10];
        object3[0] = object7;
        object3[n17] = object12;
        object6 = new Version$ECBlocks(22, (Version$ECB)object3);
        object7 = new Version$ECB(n16, 41);
        object12 = new Version$ECB(n16, 42);
        object10 = new Version$ECB[n10];
        object10[0] = object7;
        object10[1] = object12;
        n8 = 24;
        object3 = new Version$ECBlocks(n8, (Version$ECB[])object10);
        object7 = new Version$ECB(n16, n8);
        Object object21 = object15;
        n3 = 7;
        object12 = new Version$ECB(n3, 25);
        object8 = new Version$ECB[n10];
        object8[0] = object7;
        object8[1] = object12;
        object10 = new Version$ECBlocks(30, (Version$ECB)object8);
        object8 = new Version$ECB(11, 12);
        object7 = new Version$ECB(n3, 13);
        n3 = 2;
        object9 = new Version$ECB[n3];
        object9[0] = object8;
        n16 = 1;
        object9[n16] = object7;
        object12 = new Version$ECBlocks(24, (Version$ECB[])object9);
        object9 = new Version$ECBlocks[4];
        object9[0] = object6;
        object9[n16] = object3;
        object9[n3] = object10;
        object9[3] = object12;
        object4 = new Version(15, (int[])object13, (Version$ECBlocks[])object9);
        object3 = new int[]{6, 26, 50, 74};
        object6 = new Version$ECB(5, 98);
        n16 = 1;
        object7 = new Version$ECB(n16, 99);
        n8 = 2;
        object9 = new Version$ECB[n8];
        object9[0] = object6;
        object9[n16] = object7;
        object13 = new Version$ECBlocks(24, (Version$ECB[])object9);
        object7 = new Version$ECB(7, 45);
        object8 = new Version$ECB(3, 46);
        object9 = new Version$ECB[n8];
        object9[0] = object7;
        object9[1] = object8;
        object6 = new Version$ECBlocks(28, (Version$ECB[])object9);
        object9 = new Version$ECB(15, 19);
        object7 = new Version$ECB(n8, 20);
        object10 = new Version$ECB[n8];
        object10[0] = object9;
        object10[1] = object7;
        object8 = new Version$ECBlocks(24, (Version$ECB[])object10);
        object10 = new Version$ECB(3, 15);
        Object object22 = object4;
        object9 = new Version$ECB(13, 16);
        n14 = 2;
        object12 = new Version$ECB[n14];
        object12[0] = object10;
        n17 = 1;
        object12[n17] = object9;
        object7 = new Version$ECBlocks(30, (Version$ECB)object12);
        object9 = new Version$ECBlocks[4];
        object9[0] = object13;
        object9[n17] = object6;
        object9[n14] = object8;
        object9[3] = object7;
        object15 = new Version(16, (int[])object3, (Version$ECBlocks[])object9);
        object3 = new int[]{6, 30, 54, 78};
        object6 = new Version$ECB(n17, 107);
        object7 = new Version$ECB(5, 108);
        n8 = 2;
        object8 = new Version$ECB[n8];
        object8[0] = object6;
        object8[n17] = object7;
        object13 = new Version$ECBlocks(28, (Version$ECB)object8);
        object8 = new Version$ECB(10, 46);
        object6 = new Version$ECB(n17, 47);
        object9 = new Version$ECB[n8];
        object9[0] = object8;
        object9[n17] = object6;
        object7 = new Version$ECBlocks(28, (Version$ECB[])object9);
        object9 = new Version$ECB(n17, 22);
        Object object23 = object15;
        n17 = 15;
        object6 = new Version$ECB(n17, 23);
        object15 = new Version$ECB[n8];
        object15[0] = object9;
        object15[1] = object6;
        object8 = new Version$ECBlocks(28, (Version$ECB[])object15);
        object6 = new Version$ECB(n8, 14);
        Object object24 = object14;
        int n20 = 17;
        object9 = new Version$ECB(n20, n17);
        object10 = new Version$ECB[n8];
        object10[0] = object6;
        n18 = 1;
        object10[n18] = object9;
        object15 = new Version$ECBlocks(28, (Version$ECB[])object10);
        object10 = new Version$ECBlocks[4];
        object10[0] = object13;
        object10[n18] = object7;
        object10[n8] = object8;
        object10[3] = object15;
        object4 = new Version(n20, (int[])object3, (Version$ECBlocks)object10);
        n18 = 30;
        object15 = new int[]{6, n18, 56, 82};
        object13 = new Version$ECB(5, 120);
        n16 = 1;
        object7 = new Version$ECB(n16, 121);
        object9 = new Version$ECB[2];
        object9[0] = object13;
        object9[n16] = object7;
        object3 = new Version$ECBlocks(n18, (Version$ECB[])object9);
        object6 = new Version$ECB(9, 43);
        object7 = new Version$ECB(4, 44);
        n8 = 2;
        object8 = new Version$ECB[n8];
        object8[0] = object6;
        n18 = 1;
        object8[n18] = object7;
        object13 = new Version$ECBlocks(26, (Version$ECB)object8);
        object8 = new Version$ECB(17, 22);
        object9 = new Version$ECB(n18, 23);
        object10 = new Version$ECB[n8];
        object10[0] = object8;
        object10[n18] = object9;
        object7 = new Version$ECBlocks(28, (Version$ECB[])object10);
        object10 = new Version$ECB(n8, 14);
        Object object25 = object4;
        object8 = new Version$ECB(19, 15);
        object4 = new Version$ECB[n8];
        object4[0] = object10;
        n18 = 1;
        object4[n18] = object8;
        object9 = new Version$ECBlocks(28, (Version$ECB[])object4);
        object8 = new Version$ECBlocks[4];
        object8[0] = object3;
        object8[n18] = object13;
        object8[n8] = object7;
        n14 = 3;
        object8[n14] = object9;
        object14 = new Version(18, (int[])object15, (Version$ECBlocks[])object8);
        object3 = new int[]{6, 30, 58, 86};
        object6 = new Version$ECB(n14, 113);
        object7 = new Version$ECB(4, 114);
        n8 = 2;
        object8 = new Version$ECB[n8];
        object8[0] = object6;
        object8[1] = object7;
        object13 = new Version$ECBlocks(28, (Version$ECB)object8);
        object8 = new Version$ECB(n14, 44);
        object4 = new Version$ECB(11, 45);
        object6 = new Version$ECB[n8];
        object6[0] = object8;
        object6[1] = object4;
        object7 = new Version$ECBlocks(26, (Version$ECB)object6);
        object10 = new Version$ECB(17, 21);
        object4 = new Version$ECB(4, 22);
        object8 = new Version$ECB[n8];
        object8[0] = object10;
        object8[1] = object4;
        object6 = new Version$ECBlocks(26, (Version$ECB)object8);
        object4 = new Version$ECB(9, 13);
        Version$ECB[] version$ECBArray3 = object14;
        object9 = new Version$ECB(16, 14);
        object14 = new Version$ECB[n8];
        object14[0] = object4;
        n14 = 1;
        object14[n14] = object9;
        object8 = new Version$ECBlocks(26, (Version$ECB)object14);
        object9 = new Version$ECBlocks[4];
        object9[0] = object13;
        object9[n14] = object7;
        object9[n8] = object6;
        n20 = 3;
        object9[n20] = object8;
        object15 = new Version(19, (int[])object3, (Version$ECBlocks[])object9);
        object3 = new int[]{6, 34, 62, 90};
        object6 = new Version$ECB(n20, 107);
        object7 = new Version$ECB(5, 108);
        n8 = 2;
        object8 = new Version$ECB[n8];
        object8[0] = object6;
        object8[1] = object7;
        object13 = new Version$ECBlocks(28, (Version$ECB)object8);
        object8 = new Version$ECB(n20, 41);
        object14 = new Version$ECB(13, 42);
        object6 = new Version$ECB[n8];
        object6[0] = object8;
        object6[1] = object14;
        object7 = new Version$ECBlocks(26, (Version$ECB)object6);
        object6 = new Version$ECB(15, 24);
        object8 = new Version$ECB(5, 25);
        object9 = new Version$ECB[n8];
        object9[0] = object6;
        object9[1] = object8;
        object14 = new Version$ECBlocks(30, (Version$ECB[])object9);
        n18 = 15;
        object9 = new Version$ECB(n18, n18);
        Object object26 = object15;
        object6 = new Version$ECB(10, 16);
        object15 = new Version$ECB[n8];
        object15[0] = object9;
        n10 = 1;
        object15[n10] = object6;
        object8 = new Version$ECBlocks(28, (Version$ECB[])object15);
        object6 = new Version$ECBlocks[4];
        object6[0] = object13;
        object6[n10] = object7;
        object6[n8] = object14;
        object6[3] = object8;
        object4 = new Version(20, (int[])object3, (Version$ECBlocks[])object6);
        n18 = 28;
        object15 = new int[]{6, n18, 50, 72, 94};
        n8 = 4;
        object13 = new Version$ECB(n8, 116);
        object7 = new Version$ECB(n8, 117);
        object8 = new Version$ECB[2];
        object8[0] = object13;
        n4 = 1;
        object8[n4] = object7;
        object3 = new Version$ECBlocks(n18, (Version$ECB)object8);
        n10 = 17;
        object7 = new Version$ECB(n10, 42);
        object8 = new Version$ECB[n4];
        object8[0] = object7;
        object6 = new Version$ECBlocks(26, (Version$ECB)object8);
        object8 = new Version$ECB(n10, 22);
        object10 = new Version$ECB(6, 23);
        n4 = 2;
        object9 = new Version$ECB[n4];
        object9[0] = object8;
        object9[1] = object10;
        object7 = new Version$ECBlocks(28, (Version$ECB[])object9);
        object10 = new Version$ECB(19, 16);
        Object object27 = object4;
        object12 = new Version$ECB(6, 17);
        object4 = new Version$ECB[n4];
        object4[0] = object10;
        n17 = 1;
        object4[n17] = object12;
        object9 = new Version$ECBlocks(30, (Version$ECB[])object4);
        object12 = new Version$ECBlocks[4];
        object12[0] = object3;
        object12[n17] = object6;
        object12[n4] = object7;
        object12[3] = object9;
        object14 = new Version(21, (int[])object15, (Version$ECBlocks[])object12);
        object15 = new int[]{6, 26, 50, 74, 98};
        object6 = new Version$ECB(n4, 111);
        object7 = new Version$ECB(7, 112);
        object12 = new Version$ECB[n4];
        object12[0] = object6;
        n18 = 1;
        object12[n18] = object7;
        n19 = 28;
        object3 = new Version$ECBlocks(n19, (Version$ECB)object12);
        object8 = new Version$ECB(17, 46);
        object9 = new Version$ECB[n18];
        object9[0] = object8;
        object12 = new Version$ECBlocks(n19, (Version$ECB[])object9);
        object8 = new Version$ECB(7, 24);
        object9 = new Version$ECB(16, 25);
        object10 = new Version$ECB[2];
        object10[0] = object8;
        n18 = 1;
        object10[n18] = object9;
        object7 = new Version$ECBlocks(30, (Version$ECB[])object10);
        object9 = new Version$ECB(34, 13);
        object13 = new Version$ECB[n18];
        object13[0] = object9;
        object8 = new Version$ECBlocks(24, (Version$ECB[])object13);
        object9 = new Version$ECBlocks[4];
        object9[0] = object3;
        object9[n18] = object12;
        object9[2] = object7;
        object9[3] = object8;
        object4 = new Version(22, (int[])object15, (Version$ECBlocks[])object9);
        n19 = 30;
        object3 = new int[]{6, n19, 54, 78, 102};
        n16 = 4;
        object6 = new Version$ECB(n16, 121);
        object12 = new Version$ECB(5, 122);
        n10 = 2;
        object10 = new Version$ECB[n10];
        object10[0] = object6;
        object10[1] = object12;
        object13 = new Version$ECBlocks(n19, (Version$ECB[])object10);
        object12 = new Version$ECB(n16, 47);
        n17 = 14;
        object8 = new Version$ECB(n17, 48);
        object6 = new Version$ECB[n10];
        object6[0] = object12;
        object6[1] = object8;
        object7 = new Version$ECBlocks(28, (Version$ECB)object6);
        object8 = new Version$ECB(11, 24);
        object12 = new Version$ECB(n17, 25);
        object10 = new Version$ECB[]{object8, object12};
        object6 = new Version$ECBlocks(30, (Version$ECB[])object10);
        n16 = 16;
        object12 = new Version$ECB(n16, 15);
        Object object28 = object4;
        object9 = new Version$ECB(14, n16);
        n14 = 2;
        object8 = new Version$ECB[n14];
        object8[0] = object12;
        n8 = 1;
        object8[n8] = object9;
        object10 = new Version$ECBlocks(30, (Version$ECB)object8);
        object9 = new Version$ECBlocks[4];
        object9[0] = object13;
        object9[n8] = object7;
        object9[n14] = object6;
        object9[3] = object10;
        object15 = new Version(23, (int[])object3, (Version$ECBlocks[])object9);
        n18 = 6;
        object3 = new int[]{n18, 28, 54, 80, 106};
        object7 = new Version$ECB(n18, 117);
        object12 = new Version$ECB(4, 118);
        n16 = 2;
        object9 = new Version$ECB[n16];
        object9[0] = object7;
        object9[1] = object12;
        object13 = new Version$ECBlocks(30, (Version$ECB[])object9);
        object9 = new Version$ECB(n18, 45);
        object6 = new Version$ECB(14, 46);
        object7 = new Version$ECB[n16];
        object7[0] = object9;
        object7[1] = object6;
        object12 = new Version$ECBlocks(28, (Version$ECB)object7);
        object7 = new Version$ECB(11, 24);
        Object object29 = object15;
        n17 = 16;
        object9 = new Version$ECB(n17, 25);
        object15 = new Version$ECB[n16];
        object15[0] = object7;
        object15[1] = object9;
        n10 = 30;
        object6 = new Version$ECBlocks(n10, (Version$ECB[])object15);
        object7 = new Version$ECB(n10, n17);
        object10 = new Version$ECB(n16, 17);
        object9 = new Version$ECB[n16];
        object9[0] = object7;
        n19 = 1;
        object9[n19] = object10;
        object15 = new Version$ECBlocks(30, (Version$ECB[])object9);
        object10 = new Version$ECBlocks[4];
        object10[0] = object13;
        object10[n19] = object12;
        object10[n16] = object6;
        object10[3] = object15;
        object4 = new Version(24, (int[])object3, (Version$ECBlocks)object10);
        object3 = new int[]{6, 32, 58, 84, 110};
        n8 = 8;
        object6 = new Version$ECB(n8, 106);
        object7 = new Version$ECB(4, 107);
        n16 = 2;
        object9 = new Version$ECB[n16];
        object9[0] = object6;
        object9[1] = object7;
        object13 = new Version$ECBlocks(26, (Version$ECB[])object9);
        object9 = new Version$ECB(n8, 47);
        object6 = new Version$ECB(13, 48);
        object12 = new Version$ECB[n16];
        object12[0] = object9;
        object12[1] = object6;
        object7 = new Version$ECBlocks(28, (Version$ECB)object12);
        object12 = new Version$ECB(7, 24);
        Object object30 = object4;
        n17 = 22;
        object9 = new Version$ECB(n17, 25);
        object4 = new Version$ECB[n16];
        object4[0] = object12;
        object4[1] = object9;
        object6 = new Version$ECBlocks(30, (Version$ECB[])object4);
        object9 = new Version$ECB(n17, 15);
        Version$ECB[] version$ECBArray4 = object14;
        object12 = new Version$ECB(13, 16);
        object14 = new Version$ECB[n16];
        object14[0] = object9;
        n10 = 1;
        object14[n10] = object12;
        n8 = 30;
        object4 = new Version$ECBlocks(n8, (Version$ECB)object14);
        object10 = new Version$ECBlocks[4];
        object10[0] = object13;
        object10[n10] = object7;
        object10[n16] = object6;
        object10[3] = object4;
        object15 = new Version(25, (int[])object3, (Version$ECBlocks)object10);
        object4 = new int[]{6, n8, 58, 86, 114};
        object13 = new Version$ECB(10, 114);
        n8 = 2;
        object6 = new Version$ECB(n8, 115);
        object7 = new Version$ECB[n8];
        object7[0] = object13;
        object7[1] = object6;
        object3 = new Version$ECBlocks(28, (Version$ECB)object7);
        object9 = new Version$ECB(19, 46);
        object6 = new Version$ECB(4, 47);
        object13 = new Version$ECB[n8];
        object13[0] = object9;
        object13[1] = object6;
        n18 = 28;
        object7 = new Version$ECBlocks(n18, (Version$ECB[])object13);
        object10 = new Version$ECB(n18, 22);
        object9 = new Version$ECB(6, 23);
        object6 = new Version$ECB[n8];
        object6[0] = object10;
        object6[1] = object9;
        object13 = new Version$ECBlocks(28, (Version$ECB)object6);
        object9 = new Version$ECB(33, 16);
        Object object31 = object15;
        n3 = 4;
        object8 = new Version$ECB(n3, 17);
        object10 = new Version$ECB[n8];
        object10[0] = object9;
        n10 = 1;
        object10[n10] = object8;
        object6 = new Version$ECBlocks(30, (Version$ECB[])object10);
        object8 = new Version$ECBlocks[n3];
        object8[0] = object3;
        object8[n10] = object7;
        object8[n8] = object13;
        object8[3] = object6;
        object14 = new Version(26, (int[])object4, (Version$ECBlocks[])object8);
        object15 = new int[]{6, 34, 62, 90, 118};
        object13 = new Version$ECB(8, 122);
        object6 = new Version$ECB(4, 123);
        n19 = 2;
        object12 = new Version$ECB[n19];
        object12[0] = object13;
        object12[1] = object6;
        object3 = new Version$ECBlocks(30, (Version$ECB)object12);
        object12 = new Version$ECB(22, 45);
        object9 = new Version$ECB(3, 46);
        object13 = new Version$ECB[n19];
        object13[0] = object12;
        object13[1] = object9;
        object6 = new Version$ECBlocks(28, (Version$ECB[])object13);
        object9 = new Version$ECB(8, 23);
        object12 = new Version$ECB(26, 24);
        object8 = new Version$ECB[n19];
        object8[0] = object9;
        object8[1] = object12;
        object13 = new Version$ECBlocks(30, (Version$ECB)object8);
        object12 = new Version$ECB(12, 15);
        Version$ECB[] version$ECBArray5 = object14;
        object9 = new Version$ECB(28, 16);
        object14 = new Version$ECB[n19];
        object14[0] = object12;
        n8 = 1;
        object14[n8] = object9;
        object8 = new Version$ECBlocks(30, (Version$ECB)object14);
        object9 = new Version$ECBlocks[4];
        object9[0] = object3;
        object9[n8] = object6;
        object9[n19] = object13;
        n20 = 3;
        object9[n20] = object8;
        object4 = new Version(27, (int[])object15, (Version$ECBlocks[])object9);
        Object object32 = object13 = (Object)new int[6];
        Object object33 = object13;
        object32[0] = 6;
        object33[1] = 26;
        object32[2] = 50;
        object33[3] = 74;
        object32[4] = 98;
        object33[5] = 122;
        object6 = new Version$ECB(n20, 117);
        object7 = new Version$ECB(10, 118);
        n8 = 2;
        object8 = new Version$ECB[n8];
        object8[0] = object6;
        object8[1] = object7;
        object3 = new Version$ECBlocks(30, (Version$ECB)object8);
        object8 = new Version$ECB(n20, 45);
        object14 = new Version$ECB(23, 46);
        object6 = new Version$ECB[n8];
        object6[0] = object8;
        object6[1] = object14;
        object7 = new Version$ECBlocks(28, (Version$ECB)object6);
        object6 = new Version$ECB(4, 24);
        object8 = new Version$ECB(31, 25);
        object9 = new Version$ECB[n8];
        object9[0] = object6;
        object9[1] = object8;
        object14 = new Version$ECBlocks(30, (Version$ECB[])object9);
        object8 = new Version$ECB(11, 15);
        Object object34 = object4;
        object6 = new Version$ECB(31, 16);
        object4 = new Version$ECB[n8];
        object4[0] = object8;
        n16 = 1;
        object4[n16] = object6;
        object9 = new Version$ECBlocks(30, (Version$ECB[])object4);
        object6 = new Version$ECBlocks[4];
        object6[0] = object3;
        object6[n16] = object7;
        object6[n8] = object14;
        object6[3] = object9;
        object15 = new Version(28, (int[])object13, (Version$ECBlocks[])object6);
        Object object35 = object3 = (Object)new int[6];
        Object object36 = object3;
        object35[0] = (Version$ECB)6;
        object36[1] = (Version$ECB)30;
        object35[2] = (Version$ECB)54;
        object36[3] = (Version$ECB)78;
        object35[4] = (Version$ECB)102;
        object36[5] = (Version$ECB)126;
        n18 = 7;
        object13 = new Version$ECB(n18, 116);
        object7 = new Version$ECB(n18, 117);
        n8 = 2;
        object8 = new Version$ECB[n8];
        object8[0] = object13;
        object8[1] = object7;
        object4 = new Version$ECBlocks(30, (Version$ECB)object8);
        object8 = new Version$ECB(21, 45);
        object13 = new Version$ECB(n18, 46);
        object6 = new Version$ECB[n8];
        object6[0] = object8;
        n16 = 1;
        object6[n16] = object13;
        object7 = new Version$ECBlocks(28, (Version$ECB)object6);
        object6 = new Version$ECB(n16, 23);
        object10 = new Version$ECB(37, 24);
        object8 = new Version$ECB[n8];
        object8[0] = object6;
        object8[1] = object10;
        object13 = new Version$ECBlocks(30, (Version$ECB)object8);
        object10 = new Version$ECB(19, 15);
        Object object37 = object15;
        object6 = new Version$ECB(26, 16);
        object15 = new Version$ECB[n8];
        object15[0] = object10;
        n17 = 1;
        object15[n17] = object6;
        object8 = new Version$ECBlocks(30, (Version$ECB[])object15);
        object6 = new Version$ECBlocks[4];
        object6[0] = object4;
        object6[n17] = object7;
        object6[n8] = object13;
        object6[3] = object8;
        object14 = new Version(29, (int[])object3, (Version$ECBlocks[])object6);
        Object object38 = object3 = (Object)new int[6];
        Object object39 = object3;
        object38[0] = (Version$ECB)6;
        object39[1] = (Version$ECB)26;
        object38[2] = (Version$ECB)52;
        object39[3] = (Version$ECB)78;
        object38[4] = (Version$ECB)104;
        object39[5] = (Version$ECB)130;
        object13 = new Version$ECB(5, 115);
        n19 = 10;
        object6 = new Version$ECB(n19, 116);
        n8 = 2;
        object8 = new Version$ECB[n8];
        object8[0] = object13;
        object8[1] = object6;
        object15 = new Version$ECBlocks(30, (Version$ECB)object8);
        object8 = new Version$ECB(19, 47);
        object13 = new Version$ECB(n19, 48);
        object7 = new Version$ECB[n8];
        object7[0] = object8;
        object7[1] = object13;
        object6 = new Version$ECBlocks(28, (Version$ECB)object7);
        object7 = new Version$ECB(15, 24);
        n17 = 25;
        object8 = new Version$ECB(n17, n17);
        object10 = new Version$ECB[n8];
        object10[0] = object7;
        object10[1] = object8;
        object13 = new Version$ECBlocks(30, (Version$ECB[])object10);
        object8 = new Version$ECB(23, 15);
        Version$ECB[] version$ECBArray6 = object14;
        object7 = new Version$ECB(25, 16);
        object14 = new Version$ECB[n8];
        object14[0] = object8;
        n16 = 1;
        object14[n16] = object7;
        object10 = new Version$ECBlocks(30, (Version$ECB)object14);
        object7 = new Version$ECBlocks[4];
        object7[0] = object15;
        object7[n16] = object6;
        object7[n8] = object13;
        n20 = 3;
        object7[n20] = object10;
        object4 = new Version(30, (int[])object3, (Version$ECBlocks[])object7);
        Object object40 = object13 = (Object)new int[6];
        Object object41 = object13;
        object40[0] = 6;
        object41[1] = 30;
        object40[2] = 56;
        object41[3] = 82;
        object40[4] = 108;
        object41[5] = 134;
        object6 = new Version$ECB(13, 115);
        object7 = new Version$ECB(n20, 116);
        n20 = 2;
        object12 = new Version$ECB[n20];
        object12[0] = object6;
        object12[1] = object7;
        object3 = new Version$ECBlocks(30, (Version$ECB)object12);
        object12 = new Version$ECB(n20, 46);
        object9 = new Version$ECB(29, 47);
        object6 = new Version$ECB[n20];
        object6[0] = object12;
        n8 = 1;
        object6[n8] = object9;
        object7 = new Version$ECBlocks(28, (Version$ECB)object6);
        object9 = new Version$ECB(42, 24);
        object8 = new Version$ECB(n8, 25);
        object10 = new Version$ECB[n20];
        object10[0] = object9;
        object10[n8] = object8;
        object6 = new Version$ECBlocks(30, (Version$ECB[])object10);
        object10 = new Version$ECB(23, 15);
        Object object42 = object4;
        object12 = new Version$ECB(28, 16);
        object4 = new Version$ECB[n20];
        object4[0] = object10;
        n16 = 1;
        object4[n16] = object12;
        object9 = new Version$ECBlocks(30, (Version$ECB[])object4);
        object12 = new Version$ECBlocks[4];
        object12[0] = object3;
        object12[n16] = object7;
        object12[n20] = object6;
        object12[3] = object9;
        object15 = new Version(31, (int[])object13, (Version$ECBlocks[])object12);
        Object object43 = object3 = (Object)new int[6];
        Object object44 = object3;
        object43[0] = (Version$ECB)6;
        object44[1] = (Version$ECB)34;
        object43[2] = (Version$ECB)60;
        object44[3] = (Version$ECB)86;
        object43[4] = (Version$ECB)112;
        object44[5] = (Version$ECB)138;
        object13 = new Version$ECB(17, 115);
        n18 = 1;
        object7 = new Version$ECB[n18];
        object7[0] = object13;
        object4 = new Version$ECBlocks(30, (Version$ECB)object7);
        object7 = new Version$ECB(10, 46);
        object9 = new Version$ECB(23, 47);
        n16 = 2;
        object10 = new Version$ECB[n16];
        object10[0] = object7;
        object10[n18] = object9;
        object13 = new Version$ECBlocks(28, (Version$ECB[])object10);
        object9 = new Version$ECB(10, 24);
        object6 = new Version$ECB(35, 25);
        object12 = new Version$ECB[n16];
        object12[0] = object9;
        object12[1] = object6;
        object7 = new Version$ECBlocks(30, (Version$ECB)object12);
        object6 = new Version$ECB(19, 15);
        Object object45 = object15;
        object9 = new Version$ECB(35, 16);
        object15 = new Version$ECB[n16];
        object15[0] = object6;
        n18 = 1;
        object15[n18] = object9;
        object12 = new Version$ECBlocks(30, (Version$ECB[])object15);
        object9 = new Version$ECBlocks[4];
        object9[0] = object4;
        object9[n18] = object13;
        object9[n16] = object7;
        object9[3] = object12;
        object14 = new Version(32, (int[])object3, (Version$ECBlocks[])object9);
        Object object46 = object3 = (Object)new int[6];
        Object object47 = object3;
        object46[0] = (Version$ECB)6;
        object47[1] = (Version$ECB)30;
        object46[2] = (Version$ECB)58;
        object47[3] = (Version$ECB)86;
        object46[4] = (Version$ECB)114;
        object47[5] = (Version$ECB)142;
        object13 = new Version$ECB(17, 115);
        n19 = 1;
        object6 = new Version$ECB(n19, 116);
        n8 = 2;
        object8 = new Version$ECB[n8];
        object8[0] = object13;
        object8[n19] = object6;
        object15 = new Version$ECBlocks(30, (Version$ECB)object8);
        object6 = new Version$ECB(14, 46);
        object8 = new Version$ECB(21, 47);
        object7 = new Version$ECB[n8];
        object7[0] = object6;
        object7[1] = object8;
        object13 = new Version$ECBlocks(28, (Version$ECB)object7);
        object8 = new Version$ECB(29, 24);
        object6 = new Version$ECB(19, 25);
        object9 = new Version$ECB[n8];
        object9[0] = object8;
        object9[1] = object6;
        object7 = new Version$ECBlocks(30, (Version$ECB[])object9);
        object6 = new Version$ECB(11, 15);
        Version$ECB[] version$ECBArray7 = object14;
        object8 = new Version$ECB(46, 16);
        object14 = new Version$ECB[n8];
        object14[0] = object6;
        n18 = 1;
        object14[n18] = object8;
        object9 = new Version$ECBlocks(30, (Version$ECB)object14);
        object8 = new Version$ECBlocks[4];
        object8[0] = object15;
        object8[n18] = object13;
        object8[n8] = object7;
        object8[3] = object9;
        object4 = new Version(33, (int[])object3, (Version$ECBlocks[])object8);
        n3 = 6;
        Object object48 = object3 = (Object)new int[n3];
        Object object49 = object3;
        object48[0] = (Version$ECB)6;
        object49[1] = (Version$ECB)34;
        object48[2] = (Version$ECB)62;
        object49[3] = (Version$ECB)90;
        object48[4] = (Version$ECB)118;
        object49[5] = (Version$ECB)146;
        object6 = new Version$ECB(13, 115);
        object7 = new Version$ECB(n3, 116);
        n3 = 2;
        object12 = new Version$ECB[n3];
        object12[0] = object6;
        object12[1] = object7;
        object13 = new Version$ECBlocks(30, (Version$ECB)object12);
        object12 = new Version$ECB(14, 46);
        object9 = new Version$ECB(23, 47);
        object6 = new Version$ECB[n3];
        object6[0] = object12;
        object6[1] = object9;
        object7 = new Version$ECBlocks(28, (Version$ECB)object6);
        object9 = new Version$ECB(44, 24);
        object12 = new Version$ECB(7, 25);
        object8 = new Version$ECB[n3];
        object8[0] = object9;
        n10 = 1;
        object8[n10] = object12;
        object6 = new Version$ECBlocks(30, (Version$ECB)object8);
        object12 = new Version$ECB(59, 16);
        object15 = new Version$ECB(n10, 17);
        Object object50 = object4;
        n17 = 2;
        object4 = new Version$ECB[n17];
        object4[0] = object12;
        object4[n10] = object15;
        object8 = new Version$ECBlocks(30, (Version$ECB[])object4);
        object15 = new Version$ECBlocks[4];
        object15[0] = object13;
        object15[n10] = object7;
        object15[n17] = object6;
        object15[3] = object8;
        object14 = new Version(34, (int[])object3, (Version$ECBlocks[])object15);
        n3 = 7;
        Object object51 = object3 = (Object)new int[n3];
        Object object52 = object3;
        object51[0] = (Version$ECB)6;
        object52[1] = (Version$ECB)30;
        object51[2] = (Version$ECB)54;
        object52[3] = (Version$ECB)78;
        object51[4] = (Version$ECB)102;
        object52[5] = (Version$ECB)126;
        object52[6] = (Version$ECB)150;
        n8 = 12;
        object6 = new Version$ECB(n8, 121);
        object7 = new Version$ECB(n3, 122);
        n3 = 2;
        object8 = new Version$ECB[n3];
        object8[0] = object6;
        object8[1] = object7;
        object13 = new Version$ECBlocks(30, (Version$ECB)object8);
        object8 = new Version$ECB(n8, 47);
        object12 = new Version$ECB(26, 48);
        object6 = new Version$ECB[n3];
        object6[0] = object8;
        object6[1] = object12;
        object7 = new Version$ECBlocks(28, (Version$ECB)object6);
        object12 = new Version$ECB(39, 24);
        object8 = new Version$ECB(14, 25);
        object9 = new Version$ECB[n3];
        object9[0] = object12;
        object9[1] = object8;
        object6 = new Version$ECBlocks(30, (Version$ECB[])object9);
        object8 = new Version$ECB(22, 15);
        Version$ECB[] version$ECBArray8 = object14;
        object12 = new Version$ECB(41, 16);
        object14 = new Version$ECB[n3];
        object14[0] = object8;
        n16 = 1;
        object14[n16] = object12;
        object9 = new Version$ECBlocks(30, (Version$ECB)object14);
        object12 = new Version$ECBlocks[4];
        object12[0] = object13;
        object12[n16] = object7;
        object12[n3] = object6;
        object12[3] = object9;
        object4 = new Version(35, (int[])object3, (Version$ECBlocks[])object12);
        Object object53 = object3 = (Object)new int[7];
        Object object54 = object3;
        object53[0] = (Version$ECB)6;
        object54[1] = (Version$ECB)24;
        object53[2] = (Version$ECB)50;
        object54[3] = (Version$ECB)76;
        object53[4] = (Version$ECB)102;
        object54[5] = (Version$ECB)128;
        object54[6] = (Version$ECB)154;
        n19 = 6;
        object13 = new Version$ECB(n19, 121);
        object6 = new Version$ECB(14, 122);
        n8 = 2;
        object8 = new Version$ECB[n8];
        object8[0] = object13;
        object8[1] = object6;
        object15 = new Version$ECBlocks(30, (Version$ECB)object8);
        object8 = new Version$ECB(n19, 47);
        object7 = new Version$ECB(34, 48);
        object13 = new Version$ECB[n8];
        object13[0] = object8;
        object13[1] = object7;
        object6 = new Version$ECBlocks(28, (Version$ECB[])object13);
        object7 = new Version$ECB(46, 24);
        object8 = new Version$ECB(10, 25);
        object9 = new Version$ECB[n8];
        object9[0] = object7;
        object9[1] = object8;
        object13 = new Version$ECBlocks(30, (Version$ECB[])object9);
        object8 = new Version$ECB(n8, 15);
        Object object55 = object4;
        object7 = new Version$ECB(64, 16);
        object4 = new Version$ECB[n8];
        object4[0] = object8;
        n16 = 1;
        object4[n16] = object7;
        object9 = new Version$ECBlocks(30, (Version$ECB[])object4);
        object7 = new Version$ECBlocks[4];
        object7[0] = object15;
        object7[n16] = object6;
        object7[n8] = object13;
        object7[3] = object9;
        object14 = new Version(36, (int[])object3, (Version$ECBlocks[])object7);
        Object object56 = object3 = (Object)new int[7];
        Object object57 = object3;
        object56[0] = (Version$ECB)6;
        object57[1] = (Version$ECB)28;
        object56[2] = (Version$ECB)54;
        object57[3] = (Version$ECB)80;
        object56[4] = (Version$ECB)106;
        object57[5] = (Version$ECB)132;
        object57[6] = (Version$ECB)158;
        object13 = new Version$ECB(17, 122);
        object6 = new Version$ECB(4, 123);
        n19 = 2;
        object12 = new Version$ECB[n19];
        object12[0] = object13;
        object12[1] = object6;
        object15 = new Version$ECBlocks(30, (Version$ECB)object12);
        object12 = new Version$ECB(29, 46);
        object9 = new Version$ECB(14, 47);
        object13 = new Version$ECB[n19];
        object13[0] = object12;
        object13[1] = object9;
        object6 = new Version$ECBlocks(28, (Version$ECB[])object13);
        object9 = new Version$ECB(49, 24);
        object10 = new Version$ECB(10, 25);
        object12 = new Version$ECB[n19];
        object12[0] = object9;
        object12[1] = object10;
        object13 = new Version$ECBlocks(30, (Version$ECB)object12);
        object10 = new Version$ECB(24, 15);
        Version$ECB[] version$ECBArray9 = object14;
        object8 = new Version$ECB(46, 16);
        object14 = new Version$ECB[n19];
        object14[0] = object10;
        n17 = 1;
        object14[n17] = object8;
        object12 = new Version$ECBlocks(30, (Version$ECB)object14);
        object8 = new Version$ECBlocks[4];
        object8[0] = object15;
        object8[n17] = object6;
        object8[n19] = object13;
        object8[3] = object12;
        object4 = new Version(37, (int[])object3, (Version$ECBlocks[])object8);
        Object object58 = object3 = (Object)new int[7];
        Object object59 = object3;
        object58[0] = (Version$ECB)6;
        object59[1] = (Version$ECB)32;
        object58[2] = (Version$ECB)58;
        object59[3] = (Version$ECB)84;
        object58[4] = (Version$ECB)110;
        object59[5] = (Version$ECB)136;
        object59[6] = (Version$ECB)162;
        object13 = new Version$ECB(4, 122);
        object6 = new Version$ECB(18, 123);
        n19 = 2;
        object12 = new Version$ECB[n19];
        object12[0] = object13;
        object12[1] = object6;
        object15 = new Version$ECBlocks(30, (Version$ECB)object12);
        object12 = new Version$ECB(13, 46);
        object9 = new Version$ECB(32, 47);
        object13 = new Version$ECB[n19];
        object13[0] = object12;
        object13[1] = object9;
        object6 = new Version$ECBlocks(28, (Version$ECB[])object13);
        object9 = new Version$ECB(48, 24);
        object12 = new Version$ECB(14, 25);
        object8 = new Version$ECB[n19];
        object8[0] = object9;
        object8[1] = object12;
        object13 = new Version$ECBlocks(30, (Version$ECB)object8);
        object12 = new Version$ECB(42, 15);
        Object object60 = object4;
        object9 = new Version$ECB(32, 16);
        object4 = new Version$ECB[n19];
        object4[0] = object12;
        n8 = 1;
        object4[n8] = object9;
        object8 = new Version$ECBlocks(30, (Version$ECB[])object4);
        object9 = new Version$ECBlocks[4];
        object9[0] = object15;
        object9[n8] = object6;
        object9[n19] = object13;
        object9[3] = object8;
        object14 = new Version(38, (int[])object3, (Version$ECBlocks[])object9);
        Object object61 = object3 = (Object)new int[7];
        Object object62 = object3;
        object61[0] = (Version$ECB)6;
        object62[1] = (Version$ECB)26;
        object61[2] = (Version$ECB)54;
        object62[3] = (Version$ECB)82;
        object61[4] = (Version$ECB)110;
        object62[5] = (Version$ECB)138;
        object62[6] = (Version$ECB)166;
        object13 = new Version$ECB(20, 117);
        object6 = new Version$ECB(4, 118);
        n19 = 2;
        object12 = new Version$ECB[n19];
        object12[0] = object13;
        object12[1] = object6;
        object15 = new Version$ECBlocks(30, (Version$ECB)object12);
        object12 = new Version$ECB(40, 47);
        object9 = new Version$ECB(7, 48);
        object13 = new Version$ECB[n19];
        object13[0] = object12;
        object13[1] = object9;
        object6 = new Version$ECBlocks(28, (Version$ECB[])object13);
        object9 = new Version$ECB(43, 24);
        object12 = new Version$ECB(22, 25);
        object8 = new Version$ECB[n19];
        object8[0] = object9;
        object8[1] = object12;
        object13 = new Version$ECBlocks(30, (Version$ECB)object8);
        object12 = new Version$ECB(10, 15);
        Version$ECB[] version$ECBArray10 = object14;
        object9 = new Version$ECB(67, 16);
        object14 = new Version$ECB[n19];
        object14[0] = object12;
        n8 = 1;
        object14[n8] = object9;
        object8 = new Version$ECBlocks(30, (Version$ECB)object14);
        object9 = new Version$ECBlocks[4];
        object9[0] = object15;
        object9[n8] = object6;
        object9[n19] = object13;
        object9[3] = object8;
        object4 = new Version(39, (int[])object3, (Version$ECBlocks[])object9);
        Object object63 = object3 = (Object)new int[7];
        Object object64 = object3;
        object63[0] = (Version$ECB)6;
        object64[1] = (Version$ECB)30;
        object63[2] = (Version$ECB)58;
        object64[3] = (Version$ECB)86;
        object63[4] = (Version$ECB)114;
        object64[5] = (Version$ECB)142;
        object64[6] = (Version$ECB)170;
        object13 = new Version$ECB(19, 118);
        object6 = new Version$ECB(6, 119);
        n19 = 2;
        object12 = new Version$ECB[n19];
        object12[0] = object13;
        object12[1] = object6;
        object15 = new Version$ECBlocks(30, (Version$ECB)object12);
        object12 = new Version$ECB(18, 47);
        object9 = new Version$ECB(31, 48);
        object13 = new Version$ECB[n19];
        object13[0] = object12;
        object13[1] = object9;
        object6 = new Version$ECBlocks(28, (Version$ECB[])object13);
        n17 = 34;
        object9 = new Version$ECB(n17, 24);
        object12 = new Version$ECB(n17, 25);
        object8 = new Version$ECB[n19];
        object8[0] = object9;
        object8[1] = object12;
        object13 = new Version$ECBlocks(30, (Version$ECB)object8);
        object12 = new Version$ECB(20, 15);
        Object object65 = object4;
        object9 = new Version$ECB(61, 16);
        object4 = new Version$ECB[n19];
        object4[0] = object12;
        n8 = 1;
        object4[n8] = object9;
        object8 = new Version$ECBlocks(30, (Version$ECB[])object4);
        object9 = new Version$ECBlocks[4];
        object9[0] = object15;
        object9[n8] = object6;
        object9[n19] = object13;
        n14 = 3;
        object9[n14] = object8;
        n3 = 40;
        object14 = new Version(n3, (int[])object3, (Version$ECBlocks[])object9);
        object15 = new Version[n3];
        object15[0] = version;
        object15[n8] = object;
        object15[n19] = object2;
        object15[n14] = object11;
        object15[4] = object5;
        object15[5] = object16;
        object15[6] = object17;
        object15[7] = version$ECBArray;
        object15[8] = version$ECBArray2;
        object15[9] = object18;
        object15[10] = object19;
        object15[11] = object24;
        object15[12] = object20;
        object15[13] = object21;
        object15[14] = object22;
        object15[15] = object23;
        object15[16] = object25;
        object15[17] = version$ECBArray3;
        object15[18] = object26;
        object15[19] = object27;
        object15[20] = version$ECBArray4;
        object15[21] = object28;
        object15[22] = object29;
        object15[23] = object30;
        object15[24] = object31;
        object15[25] = version$ECBArray5;
        object15[26] = object34;
        object15[27] = object37;
        object15[28] = version$ECBArray6;
        object15[29] = object42;
        object15[30] = object45;
        object15[31] = version$ECBArray7;
        object15[32] = object50;
        object15[33] = version$ECBArray8;
        object15[34] = object55;
        object15[35] = version$ECBArray9;
        object15[36] = object60;
        object15[37] = version$ECBArray10;
        object15[38] = object65;
        object15[39] = object14;
        return object15;
    }

    public static Version decodeVersionInformation(int n3) {
        int[] nArray;
        int n4;
        int n7 = -1 >>> 1;
        int n8 = 0;
        for (int i3 = 0; i3 < (n4 = (nArray = VERSION_DECODE_INFO).length); ++i3) {
            int n10 = nArray[i3];
            if (n10 == n3) {
                return Version.getVersionForNumber(i3 + 7);
            }
            if ((n10 = FormatInformation.numBitsDiffering(n3, n10)) >= n7) continue;
            n8 = i3 + 7;
            n7 = n10;
        }
        n3 = 3;
        if (n7 <= n3) {
            return Version.getVersionForNumber(n8);
        }
        return null;
    }

    public static Version getProvisionalVersionForDimension(int n3) {
        int n4 = n3 % 4;
        int n7 = 1;
        if (n4 == n7) {
            n3 += -17;
            try {
                n3 /= 4;
            }
            catch (IllegalArgumentException illegalArgumentException) {
                throw FormatException.getFormatInstance();
            }
            return Version.getVersionForNumber(n3);
        }
        throw FormatException.getFormatInstance();
    }

    public static Version getVersionForNumber(int n3) {
        int n4;
        if (n3 > 0 && n3 <= (n4 = 40)) {
            Version[] versionArray = VERSIONS;
            return versionArray[n3 += -1];
        }
        IllegalArgumentException illegalArgumentException = new IllegalArgumentException();
        throw illegalArgumentException;
    }

    public BitMatrix buildFunctionPattern() {
        int n3;
        int n4 = this.getDimensionForVersion();
        BitMatrix bitMatrix = new BitMatrix(n4);
        int n7 = 9;
        bitMatrix.setRegion(0, 0, n7, n7);
        int n8 = n4 + -8;
        int n10 = 8;
        bitMatrix.setRegion(n8, 0, n10, n7);
        bitMatrix.setRegion(0, n8, n7, n10);
        int[] nArray = this.alignmentPatternCenters;
        n8 = nArray.length;
        for (n10 = 0; n10 < n8; ++n10) {
            int[] nArray2 = this.alignmentPatternCenters;
            n3 = nArray2[n10] + -2;
            for (int i3 = 0; i3 < n8; ++i3) {
                int n14;
                if (n10 == 0 && (i3 == 0 || i3 == (n14 = n8 + -1)) || n10 == (n14 = n8 + -1) && i3 == 0) continue;
                int[] nArray3 = this.alignmentPatternCenters;
                n14 = nArray3[i3] + -2;
                int n15 = 5;
                bitMatrix.setRegion(n14, n3, n15, n15);
            }
        }
        n8 = n4 + -17;
        n10 = 6;
        n3 = 1;
        bitMatrix.setRegion(n10, n7, n3, n8);
        bitMatrix.setRegion(n7, n10, n8, n3);
        n7 = this.versionNumber;
        if (n7 > n10) {
            n7 = 3;
            bitMatrix.setRegion(n4 += -11, 0, n7, n10);
            bitMatrix.setRegion(0, n4, n10, n7);
        }
        return bitMatrix;
    }

    public int[] getAlignmentPatternCenters() {
        return this.alignmentPatternCenters;
    }

    public int getDimensionForVersion() {
        return this.versionNumber * 4 + 17;
    }

    public Version$ECBlocks getECBlocksForLevel(ErrorCorrectionLevel errorCorrectionLevel) {
        Version$ECBlocks[] version$ECBlocksArray = this.ecBlocks;
        int n3 = errorCorrectionLevel.ordinal();
        return version$ECBlocksArray[n3];
    }

    public int getTotalCodewords() {
        return this.totalCodewords;
    }

    public int getVersionNumber() {
        return this.versionNumber;
    }

    public String toString() {
        return String.valueOf(this.versionNumber);
    }
}

