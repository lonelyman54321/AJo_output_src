/*
 * Decompiled with CFR 0.152.
 */
package com.google.android.gms.internal.vision;

import com.google.android.gms.internal.vision.zzix;
import com.google.android.gms.internal.vision.zziy;
import com.google.android.gms.internal.vision.zzjm;
import java.lang.reflect.Type;

public final class zziv
extends Enum {
    public static final /* enum */ zziv zza;
    private static final /* enum */ zziv zzaa;
    private static final /* enum */ zziv zzab;
    private static final /* enum */ zziv zzac;
    private static final /* enum */ zziv zzad;
    private static final /* enum */ zziv zzae;
    private static final /* enum */ zziv zzaf;
    private static final /* enum */ zziv zzag;
    private static final /* enum */ zziv zzah;
    private static final /* enum */ zziv zzai;
    private static final /* enum */ zziv zzaj;
    private static final /* enum */ zziv zzak;
    private static final /* enum */ zziv zzal;
    private static final /* enum */ zziv zzam;
    private static final /* enum */ zziv zzan;
    private static final /* enum */ zziv zzao;
    private static final /* enum */ zziv zzap;
    private static final /* enum */ zziv zzaq;
    private static final /* enum */ zziv zzar;
    private static final /* enum */ zziv zzas;
    private static final /* enum */ zziv zzat;
    private static final /* enum */ zziv zzau;
    private static final /* enum */ zziv zzav;
    private static final /* enum */ zziv zzaw;
    private static final /* enum */ zziv zzax;
    private static final /* enum */ zziv zzay;
    public static final /* enum */ zziv zzb;
    private static final zziv[] zzbe;
    private static final Type[] zzbf;
    private static final /* synthetic */ zziv[] zzbg;
    private static final /* enum */ zziv zzc;
    private static final /* enum */ zziv zzd;
    private static final /* enum */ zziv zze;
    private static final /* enum */ zziv zzf;
    private static final /* enum */ zziv zzg;
    private static final /* enum */ zziv zzh;
    private static final /* enum */ zziv zzi;
    private static final /* enum */ zziv zzj;
    private static final /* enum */ zziv zzk;
    private static final /* enum */ zziv zzl;
    private static final /* enum */ zziv zzm;
    private static final /* enum */ zziv zzn;
    private static final /* enum */ zziv zzo;
    private static final /* enum */ zziv zzp;
    private static final /* enum */ zziv zzq;
    private static final /* enum */ zziv zzr;
    private static final /* enum */ zziv zzs;
    private static final /* enum */ zziv zzt;
    private static final /* enum */ zziv zzu;
    private static final /* enum */ zziv zzv;
    private static final /* enum */ zziv zzw;
    private static final /* enum */ zziv zzx;
    private static final /* enum */ zziv zzy;
    private static final /* enum */ zziv zzz;
    private final zzjm zzaz;
    private final int zzba;
    private final zzix zzbb;
    private final Class zzbc;
    private final boolean zzbd;

    static {
        zziv zziv2;
        zziv zziv3;
        zziv zziv4;
        zziv zziv5;
        zziv zziv6;
        zziv zziv7;
        zziv zziv8;
        zziv zziv9;
        zziv zziv10;
        zziv zziv11;
        zziv zziv12;
        zziv zziv13;
        zziv zziv14;
        zziv zziv15;
        zziv zziv16;
        zziv zziv17;
        zziv zziv18;
        zziv zziv19;
        zziv zziv20;
        zziv zziv21;
        zziv zziv22;
        zziv zziv23;
        zziv zziv24;
        zziv zziv25;
        zziv zziv26;
        zziv zziv27;
        zziv zziv28;
        zziv zziv29;
        zziv zziv30;
        zziv zziv31;
        zziv zziv32;
        zziv zziv33;
        zziv zziv34;
        zziv zziv35;
        zziv zziv36;
        zziv zziv37;
        zziv zziv38;
        zziv zziv39;
        zziv zziv40;
        zziv zziv41;
        zziv zziv42;
        Enum enum_ = zzix.zza;
        Enum enum_2 = zzjm.zze;
        zziv[] zzivArray = zziv42;
        Enum enum_3 = enum_;
        zziv[] zzivArray2 = enum_2;
        zzc = zziv42 = new zziv("DOUBLE", 0, 0, (zzix)enum_, (zzjm)enum_2);
        Enum enum_4 = zzjm.zzd;
        zzivArray = zziv41;
        zzivArray2 = enum_4;
        zzd = zziv41 = new zziv("FLOAT", 1, 1, (zzix)enum_, (zzjm)enum_4);
        Enum enum_5 = zzjm.zzc;
        zzivArray = zziv40;
        zzivArray2 = enum_5;
        zze = zziv40 = new zziv("INT64", 2, 2, (zzix)enum_, (zzjm)enum_5);
        zzivArray = zziv39;
        zzf = zziv39 = new zziv("UINT64", 3, 3, (zzix)enum_, (zzjm)enum_5);
        Enum enum_6 = zzjm.zzb;
        zzivArray = zziv38;
        zzivArray2 = enum_6;
        zzg = zziv38 = new zziv("INT32", 4, 4, (zzix)enum_, (zzjm)enum_6);
        zzivArray = zziv37;
        zzivArray2 = enum_5;
        zzh = zziv37 = new zziv("FIXED64", 5, 5, (zzix)enum_, (zzjm)enum_5);
        zzivArray = zziv36;
        zzivArray2 = enum_6;
        zzi = zziv36 = new zziv("FIXED32", 6, 6, (zzix)enum_, (zzjm)enum_6);
        Enum enum_7 = zzjm.zzf;
        zzivArray = zziv35;
        zzivArray2 = enum_7;
        zzj = zziv35 = new zziv("BOOL", 7, 7, (zzix)enum_, (zzjm)enum_7);
        Enum enum_8 = zzjm.zzg;
        zzivArray = zziv34;
        zzivArray2 = enum_8;
        zzk = zziv34 = new zziv("STRING", 8, 8, (zzix)enum_, (zzjm)enum_8);
        zzjm zzjm2 = zzjm.zzj;
        zzivArray = zziv33;
        zzivArray2 = zzjm2;
        zzl = zziv33 = new zziv("MESSAGE", 9, 9, (zzix)enum_, zzjm2);
        Enum enum_9 = zzjm.zzh;
        zzivArray = zziv32;
        zzivArray2 = enum_9;
        zzm = zziv32 = new zziv("BYTES", 10, 10, (zzix)enum_, (zzjm)enum_9);
        zzivArray = zziv31;
        zzivArray2 = enum_6;
        zzn = zziv31 = new zziv("UINT32", 11, 11, (zzix)enum_, (zzjm)enum_6);
        Enum enum_10 = zzjm.zzi;
        zzivArray = zziv30;
        zzivArray2 = enum_10;
        zzo = zziv30 = new zziv("ENUM", 12, 12, (zzix)enum_, (zzjm)enum_10);
        zzivArray = zziv29;
        zzivArray2 = enum_6;
        zzp = zziv29 = new zziv("SFIXED32", 13, 13, (zzix)enum_, (zzjm)enum_6);
        zzivArray = zziv28;
        zzivArray2 = enum_5;
        zzq = zziv28 = new zziv("SFIXED64", 14, 14, (zzix)enum_, (zzjm)enum_5);
        zzivArray = zziv27;
        zzivArray2 = enum_6;
        zzr = zziv27 = new zziv("SINT32", 15, 15, (zzix)enum_, (zzjm)enum_6);
        zzivArray = zziv26;
        zzivArray2 = enum_5;
        zzs = zziv26 = new zziv("SINT64", 16, 16, (zzix)enum_, (zzjm)enum_5);
        zzivArray = zziv25;
        zzivArray2 = zzjm2;
        zzt = zziv25 = new zziv("GROUP", 17, 17, (zzix)enum_, zzjm2);
        zzix zzix2 = zzix.zzb;
        zzivArray = enum_;
        enum_3 = zzix2;
        zzivArray2 = enum_2;
        zzu = enum_ = new zziv("DOUBLE_LIST", 18, 18, zzix2, (zzjm)enum_2);
        zzivArray = zziv24;
        zzivArray2 = enum_4;
        zzv = zziv24 = new zziv("FLOAT_LIST", 19, 19, zzix2, (zzjm)enum_4);
        zzivArray = zziv23;
        zzivArray2 = enum_5;
        zzw = zziv23 = new zziv("INT64_LIST", 20, 20, zzix2, (zzjm)enum_5);
        zzivArray = zziv22;
        zzx = zziv22 = new zziv("UINT64_LIST", 21, 21, zzix2, (zzjm)enum_5);
        zzivArray = zziv21;
        zzivArray2 = enum_6;
        zzy = zziv21 = new zziv("INT32_LIST", 22, 22, zzix2, (zzjm)enum_6);
        zzivArray = zziv20;
        zzivArray2 = enum_5;
        zzz = zziv20 = new zziv("FIXED64_LIST", 23, 23, zzix2, (zzjm)enum_5);
        zzivArray = zziv19;
        zzivArray2 = enum_6;
        zzaa = zziv19 = new zziv("FIXED32_LIST", 24, 24, zzix2, (zzjm)enum_6);
        zzivArray = zziv18;
        zzivArray2 = enum_7;
        zzab = zziv18 = new zziv("BOOL_LIST", 25, 25, zzix2, (zzjm)enum_7);
        zzivArray = zziv17;
        zzivArray2 = enum_8;
        zzac = zziv17 = new zziv("STRING_LIST", 26, 26, zzix2, (zzjm)enum_8);
        zzivArray = enum_8;
        zzivArray2 = zzjm2;
        zzad = enum_8 = new zziv("MESSAGE_LIST", 27, 27, zzix2, zzjm2);
        zzivArray = zziv16;
        zzivArray2 = enum_9;
        zzae = zziv16 = new zziv("BYTES_LIST", 28, 28, zzix2, (zzjm)enum_9);
        zzivArray = enum_9;
        zzivArray2 = enum_6;
        zzaf = enum_9 = new zziv("UINT32_LIST", 29, 29, zzix2, (zzjm)enum_6);
        zzivArray = zziv15;
        zzivArray2 = enum_10;
        zzag = zziv15 = new zziv("ENUM_LIST", 30, 30, zzix2, (zzjm)enum_10);
        zzivArray = zziv14;
        zzivArray2 = enum_6;
        zzah = zziv14 = new zziv("SFIXED32_LIST", 31, 31, zzix2, (zzjm)enum_6);
        zzivArray = zziv13;
        zzivArray2 = enum_5;
        zzai = zziv13 = new zziv("SFIXED64_LIST", 32, 32, zzix2, (zzjm)enum_5);
        zzivArray = zziv12;
        zzivArray2 = enum_6;
        zzaj = zziv12 = new zziv("SINT32_LIST", 33, 33, zzix2, (zzjm)enum_6);
        zzivArray = zziv11;
        zzivArray2 = enum_5;
        zzak = zziv11 = new zziv("SINT64_LIST", 34, 34, zzix2, (zzjm)enum_5);
        zzix zzix3 = zzix.zzc;
        zzivArray = zziv10;
        enum_3 = zzix3;
        zzivArray2 = enum_2;
        zza = zziv10 = new zziv("DOUBLE_LIST_PACKED", 35, 35, zzix3, (zzjm)enum_2);
        zzivArray = enum_2;
        zzivArray2 = enum_4;
        zzal = enum_2 = new zziv("FLOAT_LIST_PACKED", 36, 36, zzix3, (zzjm)enum_4);
        zzivArray = enum_4;
        zzivArray2 = enum_5;
        zzam = enum_4 = new zziv("INT64_LIST_PACKED", 37, 37, zzix3, (zzjm)enum_5);
        zzivArray = zziv9;
        zzan = zziv9 = new zziv("UINT64_LIST_PACKED", 38, 38, zzix3, (zzjm)enum_5);
        zzivArray = zziv8;
        zzivArray2 = enum_6;
        zzao = zziv8 = new zziv("INT32_LIST_PACKED", 39, 39, zzix3, (zzjm)enum_6);
        zzivArray = zziv7;
        zzivArray2 = enum_5;
        zzap = zziv7 = new zziv("FIXED64_LIST_PACKED", 40, 40, zzix3, (zzjm)enum_5);
        zzivArray = zziv6;
        zzivArray2 = enum_6;
        zzaq = zziv6 = new zziv("FIXED32_LIST_PACKED", 41, 41, zzix3, (zzjm)enum_6);
        zzivArray = zziv5;
        zzivArray2 = enum_7;
        zzar = zziv5 = new zziv("BOOL_LIST_PACKED", 42, 42, zzix3, (zzjm)enum_7);
        zzivArray = enum_7;
        zzivArray2 = enum_6;
        zzas = enum_7 = new zziv("UINT32_LIST_PACKED", 43, 43, zzix3, (zzjm)enum_6);
        zzivArray = zziv4;
        zzivArray2 = enum_10;
        zzat = zziv4 = new zziv("ENUM_LIST_PACKED", 44, 44, zzix3, (zzjm)enum_10);
        zzivArray = enum_10;
        zzivArray2 = enum_6;
        zzau = enum_10 = new zziv("SFIXED32_LIST_PACKED", 45, 45, zzix3, (zzjm)enum_6);
        zzivArray = zziv3;
        zzivArray2 = enum_5;
        zzav = zziv3 = new zziv("SFIXED64_LIST_PACKED", 46, 46, zzix3, (zzjm)enum_5);
        zzivArray = zziv2;
        zzivArray2 = enum_6;
        zzaw = zziv2 = new zziv("SINT32_LIST_PACKED", 47, 47, zzix3, (zzjm)enum_6);
        zzivArray = enum_6;
        zzivArray2 = enum_5;
        zzb = enum_6 = new zziv("SINT64_LIST_PACKED", 48, 48, zzix3, (zzjm)enum_5);
        zzivArray = enum_5;
        enum_3 = zzix2;
        zzivArray2 = zzjm2;
        zzax = enum_5 = new zziv("GROUP_LIST", 49, 49, zzix2, zzjm2);
        zzix zzix4 = zzix.zzd;
        zzjm zzjm3 = zzjm.zza;
        String string2 = "MAP";
        int n3 = 50;
        int n4 = 50;
        zzivArray = new zziv(string2, n3, n4, zzix4, zzjm3);
        zzay = zzivArray;
        zziv[] zzivArray3 = new zziv[51];
        zzivArray3[0] = zziv42;
        int n7 = 1;
        zzivArray3[n7] = zziv41;
        zzivArray3[2] = zziv40;
        zzivArray3[3] = zziv39;
        zzivArray3[4] = zziv38;
        zzivArray3[5] = zziv37;
        zzivArray3[6] = zziv36;
        zzivArray3[7] = zziv35;
        zzivArray3[8] = zziv34;
        zzivArray3[9] = zziv33;
        zzivArray3[10] = zziv32;
        zzivArray3[11] = zziv31;
        zzivArray3[12] = zziv30;
        zzivArray3[13] = zziv29;
        zzivArray3[14] = zziv28;
        zzivArray3[15] = zziv27;
        zzivArray3[16] = zziv26;
        zzivArray3[17] = zziv25;
        zzivArray3[18] = enum_;
        zzivArray3[19] = zziv24;
        zzivArray3[20] = zziv23;
        zzivArray3[21] = zziv22;
        zzivArray3[22] = zziv21;
        zzivArray3[23] = zziv20;
        zzivArray3[24] = zziv19;
        zzivArray3[25] = zziv18;
        zzivArray3[26] = zziv17;
        zzivArray3[27] = enum_8;
        zzivArray3[28] = zziv16;
        zzivArray3[29] = enum_9;
        zzivArray3[30] = zziv15;
        zzivArray3[31] = zziv14;
        zzivArray3[32] = zziv13;
        zzivArray3[33] = zziv12;
        zzivArray3[34] = zziv11;
        zzivArray3[35] = zziv10;
        zzivArray3[36] = enum_2;
        zzivArray3[37] = enum_4;
        zzivArray3[38] = zziv9;
        zzivArray3[39] = zziv8;
        zzivArray3[40] = zziv7;
        zzivArray3[41] = zziv6;
        zzivArray3[42] = zziv5;
        zzivArray3[43] = enum_7;
        zzivArray3[44] = zziv4;
        zzivArray3[45] = enum_10;
        zzivArray3[46] = zziv3;
        zzivArray3[47] = zziv2;
        zzivArray3[48] = enum_6;
        zzivArray3[49] = enum_5;
        int n8 = 50;
        zzivArray3[n8] = zzivArray;
        zzbg = zzivArray3;
        zzbf = new Type[0];
        zzivArray = zziv.values();
        zzivArray3 = new zziv[zzivArray.length];
        zzbe = zzivArray3;
        int n10 = zzivArray.length;
        for (int i3 = 0; i3 < n10; i3 += n7) {
            enum_3 = zzivArray[i3];
            zzivArray2 = zzbe;
            int n14 = ((zziv)enum_3).zzba;
            zzivArray2[n14] = enum_3;
        }
    }

    /*
     * WARNING - Possible parameter corruption
     * WARNING - void declaration
     */
    private zziv(zzjm zzjm2) {
        int n4;
        void var5_4;
        void var4_3;
        void var2_-1;
        void var1_-1;
        this.zzba = (int)zzjm2;
        this.zzbb = var4_3;
        this.zzaz = var5_4;
        Object object = zziy.zza;
        int n7 = var4_3.ordinal();
        int n8 = object[n7];
        n7 = 2;
        int n10 = 1;
        if (n8 != n10) {
            if (n8 != n7) {
                n8 = 0;
                object = null;
                this.zzbc = null;
            } else {
                object = var5_4.zza();
                this.zzbc = object;
            }
        } else {
            object = var5_4.zza();
            this.zzbc = object;
        }
        object = (Object)zzix.zza;
        if (var4_3 != object || (n8 = (object = zziy.zzb)[n4 = var5_4.ordinal()]) == n10 || n8 == n7 || n8 == (n7 = 3)) {
            n10 = 0;
        }
        this.zzbd = n10;
    }

    public static zziv[] values() {
        return (zziv[])zzbg.clone();
    }

    public final int zza() {
        return this.zzba;
    }
}

